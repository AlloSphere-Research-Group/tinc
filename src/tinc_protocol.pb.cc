// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tinc_protocol.proto

#include "tinc_protocol.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_google_2fprotobuf_2fany_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Any_google_2fprotobuf_2fany_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tinc_5fprotocol_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectId_tinc_5fprotocol_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_tinc_5fprotocol_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParameterValue_tinc_5fprotocol_2eproto;
namespace tinc {
class TincMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TincMessage> _instance;
} _TincMessage_default_instance_;
class ObjectIdDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectId> _instance;
} _ObjectId_default_instance_;
class ParameterValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParameterValue> _instance;
} _ParameterValue_default_instance_;
class RegisterProcessorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterProcessor> _instance;
} _RegisterProcessor_default_instance_;
class RegisterDataPoolDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterDataPool> _instance;
} _RegisterDataPool_default_instance_;
class RegisterDiskBufferDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterDiskBuffer> _instance;
} _RegisterDiskBuffer_default_instance_;
class RegisterParameterSpaceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterParameterSpace> _instance;
} _RegisterParameterSpace_default_instance_;
class RegisterParameterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RegisterParameter> _instance;
} _RegisterParameter_default_instance_;
class ParameterSpaceValuesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParameterSpaceValues> _instance;
} _ParameterSpaceValues_default_instance_;
class ConfigureParameterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigureParameter> _instance;
} _ConfigureParameter_default_instance_;
class ConfigureParameterSpaceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigureParameterSpace> _instance;
} _ConfigureParameterSpace_default_instance_;
class ConfigureProcessorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigureProcessor> _instance;
} _ConfigureProcessor_default_instance_;
class ConfigureDiskBufferDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigureDiskBuffer> _instance;
} _ConfigureDiskBuffer_default_instance_;
class ConfigureDataPoolDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ConfigureDataPool> _instance;
} _ConfigureDataPool_default_instance_;
class CommandDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Command> _instance;
} _Command_default_instance_;
class CommandErrorPayloadDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CommandErrorPayload> _instance;
} _CommandErrorPayload_default_instance_;
class ParameterRequestChoiceElementsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParameterRequestChoiceElements> _instance;
} _ParameterRequestChoiceElements_default_instance_;
class ParameterRequestChoiceElementsReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParameterRequestChoiceElementsReply> _instance;
} _ParameterRequestChoiceElementsReply_default_instance_;
class ParameterSpaceRequestCurrentPathDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParameterSpaceRequestCurrentPath> _instance;
} _ParameterSpaceRequestCurrentPath_default_instance_;
class ParameterSpaceRequestCurrentPathReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParameterSpaceRequestCurrentPathReply> _instance;
} _ParameterSpaceRequestCurrentPathReply_default_instance_;
class ParameterSpaceRequestRootPathDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParameterSpaceRequestRootPath> _instance;
} _ParameterSpaceRequestRootPath_default_instance_;
class ParameterSpaceRequestRootPathReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ParameterSpaceRequestRootPathReply> _instance;
} _ParameterSpaceRequestRootPathReply_default_instance_;
class DataPoolCommandSliceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataPoolCommandSlice> _instance;
} _DataPoolCommandSlice_default_instance_;
class DataPoolCommandSliceReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataPoolCommandSliceReply> _instance;
} _DataPoolCommandSliceReply_default_instance_;
class DataPoolCommandCurrentFilesDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataPoolCommandCurrentFiles> _instance;
} _DataPoolCommandCurrentFiles_default_instance_;
class DataPoolCommandCurrentFilesReplyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DataPoolCommandCurrentFilesReply> _instance;
} _DataPoolCommandCurrentFilesReply_default_instance_;
}  // namespace tinc
static void InitDefaultsscc_info_Command_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_Command_default_instance_;
    new (ptr) ::tinc::Command();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::Command::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Command_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_Command_tinc_5fprotocol_2eproto}, {
      &scc_info_ObjectId_tinc_5fprotocol_2eproto.base,
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_CommandErrorPayload_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_CommandErrorPayload_default_instance_;
    new (ptr) ::tinc::CommandErrorPayload();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::CommandErrorPayload::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CommandErrorPayload_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CommandErrorPayload_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_ConfigureDataPool_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_ConfigureDataPool_default_instance_;
    new (ptr) ::tinc::ConfigureDataPool();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::ConfigureDataPool::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConfigureDataPool_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ConfigureDataPool_tinc_5fprotocol_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_ConfigureDiskBuffer_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_ConfigureDiskBuffer_default_instance_;
    new (ptr) ::tinc::ConfigureDiskBuffer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::ConfigureDiskBuffer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConfigureDiskBuffer_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ConfigureDiskBuffer_tinc_5fprotocol_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_ConfigureParameter_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_ConfigureParameter_default_instance_;
    new (ptr) ::tinc::ConfigureParameter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::ConfigureParameter::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConfigureParameter_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ConfigureParameter_tinc_5fprotocol_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_ConfigureParameterSpace_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_ConfigureParameterSpace_default_instance_;
    new (ptr) ::tinc::ConfigureParameterSpace();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::ConfigureParameterSpace::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConfigureParameterSpace_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ConfigureParameterSpace_tinc_5fprotocol_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_ConfigureProcessor_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_ConfigureProcessor_default_instance_;
    new (ptr) ::tinc::ConfigureProcessor();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::ConfigureProcessor::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ConfigureProcessor_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ConfigureProcessor_tinc_5fprotocol_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static void InitDefaultsscc_info_DataPoolCommandCurrentFiles_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_DataPoolCommandCurrentFiles_default_instance_;
    new (ptr) ::tinc::DataPoolCommandCurrentFiles();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::DataPoolCommandCurrentFiles::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataPoolCommandCurrentFiles_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DataPoolCommandCurrentFiles_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_DataPoolCommandCurrentFilesReply_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_DataPoolCommandCurrentFilesReply_default_instance_;
    new (ptr) ::tinc::DataPoolCommandCurrentFilesReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::DataPoolCommandCurrentFilesReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataPoolCommandCurrentFilesReply_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DataPoolCommandCurrentFilesReply_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_DataPoolCommandSlice_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_DataPoolCommandSlice_default_instance_;
    new (ptr) ::tinc::DataPoolCommandSlice();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::DataPoolCommandSlice::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataPoolCommandSlice_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DataPoolCommandSlice_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_DataPoolCommandSliceReply_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_DataPoolCommandSliceReply_default_instance_;
    new (ptr) ::tinc::DataPoolCommandSliceReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::DataPoolCommandSliceReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DataPoolCommandSliceReply_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DataPoolCommandSliceReply_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_ObjectId_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_ObjectId_default_instance_;
    new (ptr) ::tinc::ObjectId();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::ObjectId::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectId_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjectId_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_ParameterRequestChoiceElements_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_ParameterRequestChoiceElements_default_instance_;
    new (ptr) ::tinc::ParameterRequestChoiceElements();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::ParameterRequestChoiceElements::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParameterRequestChoiceElements_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ParameterRequestChoiceElements_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_ParameterRequestChoiceElementsReply_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_ParameterRequestChoiceElementsReply_default_instance_;
    new (ptr) ::tinc::ParameterRequestChoiceElementsReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::ParameterRequestChoiceElementsReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParameterRequestChoiceElementsReply_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ParameterRequestChoiceElementsReply_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_ParameterSpaceRequestCurrentPath_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_ParameterSpaceRequestCurrentPath_default_instance_;
    new (ptr) ::tinc::ParameterSpaceRequestCurrentPath();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::ParameterSpaceRequestCurrentPath::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParameterSpaceRequestCurrentPath_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ParameterSpaceRequestCurrentPath_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_ParameterSpaceRequestCurrentPathReply_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_ParameterSpaceRequestCurrentPathReply_default_instance_;
    new (ptr) ::tinc::ParameterSpaceRequestCurrentPathReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::ParameterSpaceRequestCurrentPathReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParameterSpaceRequestCurrentPathReply_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ParameterSpaceRequestCurrentPathReply_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_ParameterSpaceRequestRootPath_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_ParameterSpaceRequestRootPath_default_instance_;
    new (ptr) ::tinc::ParameterSpaceRequestRootPath();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::ParameterSpaceRequestRootPath::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParameterSpaceRequestRootPath_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ParameterSpaceRequestRootPath_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_ParameterSpaceRequestRootPathReply_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_ParameterSpaceRequestRootPathReply_default_instance_;
    new (ptr) ::tinc::ParameterSpaceRequestRootPathReply();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::ParameterSpaceRequestRootPathReply::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParameterSpaceRequestRootPathReply_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ParameterSpaceRequestRootPathReply_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_ParameterSpaceValues_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_ParameterSpaceValues_default_instance_;
    new (ptr) ::tinc::ParameterSpaceValues();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::ParameterSpaceValues::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ParameterSpaceValues_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ParameterSpaceValues_tinc_5fprotocol_2eproto}, {
      &scc_info_ParameterValue_tinc_5fprotocol_2eproto.base,}};

static void InitDefaultsscc_info_ParameterValue_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_ParameterValue_default_instance_;
    new (ptr) ::tinc::ParameterValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::ParameterValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ParameterValue_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ParameterValue_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_RegisterDataPool_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_RegisterDataPool_default_instance_;
    new (ptr) ::tinc::RegisterDataPool();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::RegisterDataPool::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterDataPool_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterDataPool_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_RegisterDiskBuffer_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_RegisterDiskBuffer_default_instance_;
    new (ptr) ::tinc::RegisterDiskBuffer();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::RegisterDiskBuffer::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterDiskBuffer_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterDiskBuffer_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_RegisterParameter_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_RegisterParameter_default_instance_;
    new (ptr) ::tinc::RegisterParameter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::RegisterParameter::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RegisterParameter_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RegisterParameter_tinc_5fprotocol_2eproto}, {
      &scc_info_ParameterValue_tinc_5fprotocol_2eproto.base,}};

static void InitDefaultsscc_info_RegisterParameterSpace_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_RegisterParameterSpace_default_instance_;
    new (ptr) ::tinc::RegisterParameterSpace();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::RegisterParameterSpace::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterParameterSpace_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterParameterSpace_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_RegisterProcessor_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_RegisterProcessor_default_instance_;
    new (ptr) ::tinc::RegisterProcessor();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::RegisterProcessor::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RegisterProcessor_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RegisterProcessor_tinc_5fprotocol_2eproto}, {}};

static void InitDefaultsscc_info_TincMessage_tinc_5fprotocol_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::tinc::_TincMessage_default_instance_;
    new (ptr) ::tinc::TincMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::tinc::TincMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TincMessage_tinc_5fprotocol_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TincMessage_tinc_5fprotocol_2eproto}, {
      &scc_info_Any_google_2fprotobuf_2fany_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_tinc_5fprotocol_2eproto[26];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_tinc_5fprotocol_2eproto[9];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_tinc_5fprotocol_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_tinc_5fprotocol_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::TincMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::TincMessage, messagetype_),
  PROTOBUF_FIELD_OFFSET(::tinc::TincMessage, objecttype_),
  PROTOBUF_FIELD_OFFSET(::tinc::TincMessage, details_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::ObjectId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::ObjectId, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterValue, valuefloat_),
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterValue, valuedouble_),
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterValue, valueint32_),
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterValue, valueuint32_),
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterValue, valueint64_),
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterValue, valueuint64_),
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterValue, valueint8_),
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterValue, valueuint8_),
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterValue, valuebool_),
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterValue, valuelist_),
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterValue, valuestring_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterProcessor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterProcessor, id_),
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterProcessor, type_),
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterProcessor, inputdirectory_),
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterProcessor, inputfiles_),
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterProcessor, outputdirectory_),
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterProcessor, outputfiles_),
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterProcessor, runningdirectory_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterDataPool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterDataPool, id_),
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterDataPool, parameterspaceid_),
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterDataPool, cachedirectory_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterDiskBuffer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterDiskBuffer, id_),
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterDiskBuffer, type_),
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterDiskBuffer, basefilename_),
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterDiskBuffer, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterParameterSpace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterParameterSpace, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterParameter, id_),
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterParameter, group_),
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterParameter, datatype_),
  PROTOBUF_FIELD_OFFSET(::tinc::RegisterParameter, defaultvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterSpaceValues, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterSpaceValues, ids_),
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterSpaceValues, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureParameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureParameter, id_),
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureParameter, configurationkey_),
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureParameter, configurationvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureParameterSpace, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureParameterSpace, id_),
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureParameterSpace, configurationkey_),
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureParameterSpace, configurationvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureProcessor, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureProcessor, id_),
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureProcessor, configurationkey_),
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureProcessor, configurationvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureDiskBuffer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureDiskBuffer, id_),
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureDiskBuffer, configurationkey_),
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureDiskBuffer, configurationvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureDataPool, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureDataPool, id_),
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureDataPool, configurationkey_),
  PROTOBUF_FIELD_OFFSET(::tinc::ConfigureDataPool, configurationvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::Command, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::Command, message_id_),
  PROTOBUF_FIELD_OFFSET(::tinc::Command, id_),
  PROTOBUF_FIELD_OFFSET(::tinc::Command, details_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::CommandErrorPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::CommandErrorPayload, error_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterRequestChoiceElements, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterRequestChoiceElementsReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterRequestChoiceElementsReply, elements_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterSpaceRequestCurrentPath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterSpaceRequestCurrentPathReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterSpaceRequestCurrentPathReply, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterSpaceRequestRootPath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterSpaceRequestRootPathReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::ParameterSpaceRequestRootPathReply, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::DataPoolCommandSlice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::DataPoolCommandSlice, field_),
  PROTOBUF_FIELD_OFFSET(::tinc::DataPoolCommandSlice, dimension_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::DataPoolCommandSliceReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::DataPoolCommandSliceReply, filename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::DataPoolCommandCurrentFiles, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::tinc::DataPoolCommandCurrentFilesReply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::tinc::DataPoolCommandCurrentFilesReply, filenames_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::tinc::TincMessage)},
  { 8, -1, sizeof(::tinc::ObjectId)},
  { 14, -1, sizeof(::tinc::ParameterValue)},
  { 30, -1, sizeof(::tinc::RegisterProcessor)},
  { 42, -1, sizeof(::tinc::RegisterDataPool)},
  { 50, -1, sizeof(::tinc::RegisterDiskBuffer)},
  { 59, -1, sizeof(::tinc::RegisterParameterSpace)},
  { 65, -1, sizeof(::tinc::RegisterParameter)},
  { 74, -1, sizeof(::tinc::ParameterSpaceValues)},
  { 81, -1, sizeof(::tinc::ConfigureParameter)},
  { 89, -1, sizeof(::tinc::ConfigureParameterSpace)},
  { 97, -1, sizeof(::tinc::ConfigureProcessor)},
  { 105, -1, sizeof(::tinc::ConfigureDiskBuffer)},
  { 113, -1, sizeof(::tinc::ConfigureDataPool)},
  { 121, -1, sizeof(::tinc::Command)},
  { 129, -1, sizeof(::tinc::CommandErrorPayload)},
  { 135, -1, sizeof(::tinc::ParameterRequestChoiceElements)},
  { 140, -1, sizeof(::tinc::ParameterRequestChoiceElementsReply)},
  { 146, -1, sizeof(::tinc::ParameterSpaceRequestCurrentPath)},
  { 151, -1, sizeof(::tinc::ParameterSpaceRequestCurrentPathReply)},
  { 157, -1, sizeof(::tinc::ParameterSpaceRequestRootPath)},
  { 162, -1, sizeof(::tinc::ParameterSpaceRequestRootPathReply)},
  { 168, -1, sizeof(::tinc::DataPoolCommandSlice)},
  { 175, -1, sizeof(::tinc::DataPoolCommandSliceReply)},
  { 181, -1, sizeof(::tinc::DataPoolCommandCurrentFiles)},
  { 186, -1, sizeof(::tinc::DataPoolCommandCurrentFilesReply)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_TincMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_ObjectId_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_ParameterValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_RegisterProcessor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_RegisterDataPool_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_RegisterDiskBuffer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_RegisterParameterSpace_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_RegisterParameter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_ParameterSpaceValues_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_ConfigureParameter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_ConfigureParameterSpace_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_ConfigureProcessor_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_ConfigureDiskBuffer_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_ConfigureDataPool_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_Command_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_CommandErrorPayload_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_ParameterRequestChoiceElements_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_ParameterRequestChoiceElementsReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_ParameterSpaceRequestCurrentPath_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_ParameterSpaceRequestCurrentPathReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_ParameterSpaceRequestRootPath_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_ParameterSpaceRequestRootPathReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_DataPoolCommandSlice_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_DataPoolCommandSliceReply_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_DataPoolCommandCurrentFiles_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::tinc::_DataPoolCommandCurrentFilesReply_default_instance_),
};

const char descriptor_table_protodef_tinc_5fprotocol_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023tinc_protocol.proto\022\004tinc\032\031google/prot"
  "obuf/any.proto\"\202\001\n\013TincMessage\022&\n\013messag"
  "eType\030\002 \001(\0162\021.tinc.MessageType\022$\n\nobject"
  "Type\030\003 \001(\0162\020.tinc.ObjectType\022%\n\007details\030"
  "\004 \001(\0132\024.google.protobuf.Any\"\026\n\010ObjectId\022"
  "\n\n\002id\030\001 \001(\t\"\203\002\n\016ParameterValue\022\022\n\nvalueF"
  "loat\030\001 \001(\002\022\023\n\013valueDouble\030\002 \001(\001\022\022\n\nvalue"
  "Int32\030\003 \001(\005\022\023\n\013valueUint32\030\004 \001(\005\022\022\n\nvalu"
  "eInt64\030\005 \001(\004\022\023\n\013valueUint64\030\006 \001(\004\022\021\n\tval"
  "ueInt8\030\007 \001(\004\022\022\n\nvalueUint8\030\010 \001(\004\022\021\n\tvalu"
  "eBool\030\t \001(\010\022\'\n\tvalueList\030\024 \003(\0132\024.tinc.Pa"
  "rameterValue\022\023\n\013valueString\030\036 \001(\t\"\266\001\n\021Re"
  "gisterProcessor\022\n\n\002id\030\001 \001(\t\022!\n\004type\030\002 \001("
  "\0162\023.tinc.ProcessorType\022\026\n\016inputDirectory"
  "\030\003 \001(\t\022\022\n\ninputFiles\030\004 \003(\t\022\027\n\017outputDire"
  "ctory\030\005 \001(\t\022\023\n\013outputFiles\030\006 \003(\t\022\030\n\020runn"
  "ingDirectory\030\007 \001(\t\"P\n\020RegisterDataPool\022\n"
  "\n\002id\030\001 \001(\t\022\030\n\020parameterSpaceId\030\002 \001(\t\022\026\n\016"
  "cacheDirectory\030\003 \001(\t\"h\n\022RegisterDiskBuff"
  "er\022\n\n\002id\030\001 \001(\t\022\"\n\004type\030\002 \001(\0162\024.tinc.Disk"
  "BufferType\022\024\n\014baseFilename\030\003 \001(\t\022\014\n\004path"
  "\030\004 \001(\t\"$\n\026RegisterParameterSpace\022\n\n\002id\030\001"
  " \001(\t\"\205\001\n\021RegisterParameter\022\n\n\002id\030\001 \001(\t\022\r"
  "\n\005group\030\002 \001(\t\022)\n\010dataType\030\003 \001(\0162\027.tinc.P"
  "arameterDataType\022*\n\014defaultValue\030\004 \001(\0132\024"
  ".tinc.ParameterValue\"I\n\024ParameterSpaceVa"
  "lues\022\013\n\003ids\030\001 \003(\t\022$\n\006values\030\002 \003(\0132\024.tinc"
  ".ParameterValue\"\212\001\n\022ConfigureParameter\022\n"
  "\n\002id\030\001 \001(\t\0226\n\020configurationKey\030\002 \001(\0162\034.t"
  "inc.ParameterConfigureType\0220\n\022configurat"
  "ionValue\030\003 \001(\0132\024.google.protobuf.Any\"\224\001\n"
  "\027ConfigureParameterSpace\022\n\n\002id\030\001 \001(\t\022;\n\020"
  "configurationKey\030\002 \001(\0162!.tinc.ParameterS"
  "paceConfigureType\0220\n\022configurationValue\030"
  "\003 \001(\0132\024.google.protobuf.Any\"l\n\022Configure"
  "Processor\022\n\n\002id\030\001 \001(\t\022\030\n\020configurationKe"
  "y\030\002 \001(\t\0220\n\022configurationValue\030\003 \001(\0132\024.go"
  "ogle.protobuf.Any\"\214\001\n\023ConfigureDiskBuffe"
  "r\022\n\n\002id\030\001 \001(\t\0227\n\020configurationKey\030\002 \001(\0162"
  "\035.tinc.DiskBufferConfigureType\0220\n\022config"
  "urationValue\030\003 \001(\0132\024.google.protobuf.Any"
  "\"\210\001\n\021ConfigureDataPool\022\n\n\002id\030\001 \001(\t\0225\n\020co"
  "nfigurationKey\030\002 \001(\0162\033.tinc.DataPoolConf"
  "igureType\0220\n\022configurationValue\030\003 \001(\0132\024."
  "google.protobuf.Any\"`\n\007Command\022\022\n\nmessag"
  "e_id\030\001 \001(\004\022\032\n\002id\030\002 \001(\0132\016.tinc.ObjectId\022%"
  "\n\007details\030\003 \001(\0132\024.google.protobuf.Any\"$\n"
  "\023CommandErrorPayload\022\r\n\005error\030\001 \001(\t\" \n\036P"
  "arameterRequestChoiceElements\"7\n#Paramet"
  "erRequestChoiceElementsReply\022\020\n\010elements"
  "\030\001 \003(\t\"\"\n ParameterSpaceRequestCurrentPa"
  "th\"5\n%ParameterSpaceRequestCurrentPathRe"
  "ply\022\014\n\004path\030\001 \001(\t\"\037\n\035ParameterSpaceReque"
  "stRootPath\"2\n\"ParameterSpaceRequestRootP"
  "athReply\022\014\n\004path\030\001 \001(\t\"8\n\024DataPoolComman"
  "dSlice\022\r\n\005field\030\001 \001(\t\022\021\n\tdimension\030\002 \003(\t"
  "\"-\n\031DataPoolCommandSliceReply\022\020\n\010filenam"
  "e\030\001 \001(\t\"\035\n\033DataPoolCommandCurrentFiles\"5"
  "\n DataPoolCommandCurrentFilesReply\022\021\n\tfi"
  "lenames\030\001 \003(\t*\304\001\n\013MessageType\022\013\n\007REQUEST"
  "\020\000\022\n\n\006REMOVE\020\001\022\014\n\010REGISTER\020\002\022\r\n\tCONFIGUR"
  "E\020\003\022\013\n\007COMMAND\020\004\022\021\n\rCOMMAND_REPLY\020\005\022\010\n\004P"
  "ING\020b\022\010\n\004PONG\020c\022\023\n\017BARRIER_REQUEST\020d\022\024\n\020"
  "BARRIER_ACK_LOCK\020e\022\022\n\016BARRIER_UNLOCK\020f\022\014"
  "\n\007GOODBYE\020\310\001*k\n\nObjectType\022\r\n\tPARAMETER\020"
  "\000\022\r\n\tPROCESSOR\020\001\022\017\n\013DISK_BUFFER\020\002\022\r\n\tDAT"
  "A_POOL\020\003\022\023\n\017PARAMETER_SPACE\020\004\022\n\n\006GLOBAL\020"
  "\005*3\n\rProcessorType\022\016\n\nDATASCRIPT\020\000\022\t\n\005CH"
  "AIN\020\001\022\007\n\003CPP\020\002*\375\001\n\021ParameterDataType\022\023\n\017"
  "PARAMETER_FLOAT\020\000\022\022\n\016PARAMETER_BOOL\020\001\022\024\n"
  "\020PARAMETER_STRING\020\002\022\023\n\017PARAMETER_INT32\020\003"
  "\022\023\n\017PARAMETER_VEC3F\020\004\022\023\n\017PARAMETER_VEC4F"
  "\020\005\022\024\n\020PARAMETER_COLORF\020\006\022\023\n\017PARAMETER_PO"
  "SED\020\007\022\022\n\016PARAMETER_MENU\020\010\022\024\n\020PARAMETER_C"
  "HOICE\020\t\022\025\n\021PARAMETER_TRIGGER\020\n*G\n\016DiskBu"
  "fferType\022\n\n\006BINARY\020\000\022\010\n\004TEXT\020\001\022\n\n\006NETCDF"
  "\020\002\022\010\n\004JSON\020\003\022\t\n\005IMAGE\020\004*P\n\026ParameterConf"
  "igureType\022\t\n\005VALUE\020\000\022\007\n\003MIN\020\001\022\007\n\003MAX\020\002\022\t"
  "\n\005SPACE\020\003\022\016\n\nSPACE_TYPE\020\004*F\n\033ParameterSp"
  "aceConfigureType\022\021\n\rADD_PARAMETER\020\000\022\024\n\020R"
  "EMOVE_PARAMETER\020\001*+\n\027DiskBufferConfigure"
  "Type\022\020\n\014CURRENT_FILE\020\000*,\n\025DataPoolConfig"
  "ureType\022\023\n\017SLICE_CACHE_DIR\020\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_tinc_5fprotocol_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2fany_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_tinc_5fprotocol_2eproto_sccs[26] = {
  &scc_info_Command_tinc_5fprotocol_2eproto.base,
  &scc_info_CommandErrorPayload_tinc_5fprotocol_2eproto.base,
  &scc_info_ConfigureDataPool_tinc_5fprotocol_2eproto.base,
  &scc_info_ConfigureDiskBuffer_tinc_5fprotocol_2eproto.base,
  &scc_info_ConfigureParameter_tinc_5fprotocol_2eproto.base,
  &scc_info_ConfigureParameterSpace_tinc_5fprotocol_2eproto.base,
  &scc_info_ConfigureProcessor_tinc_5fprotocol_2eproto.base,
  &scc_info_DataPoolCommandCurrentFiles_tinc_5fprotocol_2eproto.base,
  &scc_info_DataPoolCommandCurrentFilesReply_tinc_5fprotocol_2eproto.base,
  &scc_info_DataPoolCommandSlice_tinc_5fprotocol_2eproto.base,
  &scc_info_DataPoolCommandSliceReply_tinc_5fprotocol_2eproto.base,
  &scc_info_ObjectId_tinc_5fprotocol_2eproto.base,
  &scc_info_ParameterRequestChoiceElements_tinc_5fprotocol_2eproto.base,
  &scc_info_ParameterRequestChoiceElementsReply_tinc_5fprotocol_2eproto.base,
  &scc_info_ParameterSpaceRequestCurrentPath_tinc_5fprotocol_2eproto.base,
  &scc_info_ParameterSpaceRequestCurrentPathReply_tinc_5fprotocol_2eproto.base,
  &scc_info_ParameterSpaceRequestRootPath_tinc_5fprotocol_2eproto.base,
  &scc_info_ParameterSpaceRequestRootPathReply_tinc_5fprotocol_2eproto.base,
  &scc_info_ParameterSpaceValues_tinc_5fprotocol_2eproto.base,
  &scc_info_ParameterValue_tinc_5fprotocol_2eproto.base,
  &scc_info_RegisterDataPool_tinc_5fprotocol_2eproto.base,
  &scc_info_RegisterDiskBuffer_tinc_5fprotocol_2eproto.base,
  &scc_info_RegisterParameter_tinc_5fprotocol_2eproto.base,
  &scc_info_RegisterParameterSpace_tinc_5fprotocol_2eproto.base,
  &scc_info_RegisterProcessor_tinc_5fprotocol_2eproto.base,
  &scc_info_TincMessage_tinc_5fprotocol_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_tinc_5fprotocol_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_tinc_5fprotocol_2eproto = {
  false, false, descriptor_table_protodef_tinc_5fprotocol_2eproto, "tinc_protocol.proto", 3316,
  &descriptor_table_tinc_5fprotocol_2eproto_once, descriptor_table_tinc_5fprotocol_2eproto_sccs, descriptor_table_tinc_5fprotocol_2eproto_deps, 26, 1,
  schemas, file_default_instances, TableStruct_tinc_5fprotocol_2eproto::offsets,
  file_level_metadata_tinc_5fprotocol_2eproto, 26, file_level_enum_descriptors_tinc_5fprotocol_2eproto, file_level_service_descriptors_tinc_5fprotocol_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_tinc_5fprotocol_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_tinc_5fprotocol_2eproto)), true);
namespace tinc {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MessageType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_tinc_5fprotocol_2eproto);
  return file_level_enum_descriptors_tinc_5fprotocol_2eproto[0];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 98:
    case 99:
    case 100:
    case 101:
    case 102:
    case 200:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ObjectType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_tinc_5fprotocol_2eproto);
  return file_level_enum_descriptors_tinc_5fprotocol_2eproto[1];
}
bool ObjectType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ProcessorType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_tinc_5fprotocol_2eproto);
  return file_level_enum_descriptors_tinc_5fprotocol_2eproto[2];
}
bool ProcessorType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ParameterDataType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_tinc_5fprotocol_2eproto);
  return file_level_enum_descriptors_tinc_5fprotocol_2eproto[3];
}
bool ParameterDataType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DiskBufferType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_tinc_5fprotocol_2eproto);
  return file_level_enum_descriptors_tinc_5fprotocol_2eproto[4];
}
bool DiskBufferType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ParameterConfigureType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_tinc_5fprotocol_2eproto);
  return file_level_enum_descriptors_tinc_5fprotocol_2eproto[5];
}
bool ParameterConfigureType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ParameterSpaceConfigureType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_tinc_5fprotocol_2eproto);
  return file_level_enum_descriptors_tinc_5fprotocol_2eproto[6];
}
bool ParameterSpaceConfigureType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DiskBufferConfigureType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_tinc_5fprotocol_2eproto);
  return file_level_enum_descriptors_tinc_5fprotocol_2eproto[7];
}
bool DiskBufferConfigureType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* DataPoolConfigureType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_tinc_5fprotocol_2eproto);
  return file_level_enum_descriptors_tinc_5fprotocol_2eproto[8];
}
bool DataPoolConfigureType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void TincMessage::InitAsDefaultInstance() {
  ::tinc::_TincMessage_default_instance_._instance.get_mutable()->details_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class TincMessage::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& details(const TincMessage* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
TincMessage::_Internal::details(const TincMessage* msg) {
  return *msg->details_;
}
void TincMessage::clear_details() {
  if (GetArena() == nullptr && details_ != nullptr) {
    delete details_;
  }
  details_ = nullptr;
}
TincMessage::TincMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.TincMessage)
}
TincMessage::TincMessage(const TincMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_details()) {
    details_ = new PROTOBUF_NAMESPACE_ID::Any(*from.details_);
  } else {
    details_ = nullptr;
  }
  ::memcpy(&messagetype_, &from.messagetype_,
    static_cast<size_t>(reinterpret_cast<char*>(&objecttype_) -
    reinterpret_cast<char*>(&messagetype_)) + sizeof(objecttype_));
  // @@protoc_insertion_point(copy_constructor:tinc.TincMessage)
}

void TincMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TincMessage_tinc_5fprotocol_2eproto.base);
  ::memset(&details_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objecttype_) -
      reinterpret_cast<char*>(&details_)) + sizeof(objecttype_));
}

TincMessage::~TincMessage() {
  // @@protoc_insertion_point(destructor:tinc.TincMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TincMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete details_;
}

void TincMessage::ArenaDtor(void* object) {
  TincMessage* _this = reinterpret_cast< TincMessage* >(object);
  (void)_this;
}
void TincMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TincMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TincMessage& TincMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TincMessage_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void TincMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.TincMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && details_ != nullptr) {
    delete details_;
  }
  details_ = nullptr;
  ::memset(&messagetype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objecttype_) -
      reinterpret_cast<char*>(&messagetype_)) + sizeof(objecttype_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TincMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .tinc.MessageType messageType = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_messagetype(static_cast<::tinc::MessageType>(val));
        } else goto handle_unusual;
        continue;
      // .tinc.ObjectType objectType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_objecttype(static_cast<::tinc::ObjectType>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any details = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_details(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TincMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.TincMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .tinc.MessageType messageType = 2;
  if (this->messagetype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_messagetype(), target);
  }

  // .tinc.ObjectType objectType = 3;
  if (this->objecttype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_objecttype(), target);
  }

  // .google.protobuf.Any details = 4;
  if (this->has_details()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::details(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.TincMessage)
  return target;
}

size_t TincMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.TincMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .google.protobuf.Any details = 4;
  if (this->has_details()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *details_);
  }

  // .tinc.MessageType messageType = 2;
  if (this->messagetype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_messagetype());
  }

  // .tinc.ObjectType objectType = 3;
  if (this->objecttype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_objecttype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TincMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.TincMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const TincMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TincMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.TincMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.TincMessage)
    MergeFrom(*source);
  }
}

void TincMessage::MergeFrom(const TincMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.TincMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_details()) {
    _internal_mutable_details()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_details());
  }
  if (from.messagetype() != 0) {
    _internal_set_messagetype(from._internal_messagetype());
  }
  if (from.objecttype() != 0) {
    _internal_set_objecttype(from._internal_objecttype());
  }
}

void TincMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.TincMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TincMessage::CopyFrom(const TincMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.TincMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TincMessage::IsInitialized() const {
  return true;
}

void TincMessage::InternalSwap(TincMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TincMessage, objecttype_)
      + sizeof(TincMessage::objecttype_)
      - PROTOBUF_FIELD_OFFSET(TincMessage, details_)>(
          reinterpret_cast<char*>(&details_),
          reinterpret_cast<char*>(&other->details_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TincMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ObjectId::InitAsDefaultInstance() {
}
class ObjectId::_Internal {
 public:
};

ObjectId::ObjectId(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.ObjectId)
}
ObjectId::ObjectId(const ObjectId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:tinc.ObjectId)
}

void ObjectId::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectId_tinc_5fprotocol_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ObjectId::~ObjectId() {
  // @@protoc_insertion_point(destructor:tinc.ObjectId)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjectId::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ObjectId::ArenaDtor(void* object) {
  ObjectId* _this = reinterpret_cast< ObjectId* >(object);
  (void)_this;
}
void ObjectId::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjectId::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectId& ObjectId::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectId_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void ObjectId::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.ObjectId)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectId::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.ObjectId.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectId::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.ObjectId)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.ObjectId.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.ObjectId)
  return target;
}

size_t ObjectId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.ObjectId)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectId::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.ObjectId)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectId* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectId>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.ObjectId)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.ObjectId)
    MergeFrom(*source);
  }
}

void ObjectId::MergeFrom(const ObjectId& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.ObjectId)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void ObjectId::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.ObjectId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectId::CopyFrom(const ObjectId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.ObjectId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectId::IsInitialized() const {
  return true;
}

void ObjectId::InternalSwap(ObjectId* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectId::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ParameterValue::InitAsDefaultInstance() {
}
class ParameterValue::_Internal {
 public:
};

ParameterValue::ParameterValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  valuelist_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.ParameterValue)
}
ParameterValue::ParameterValue(const ParameterValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      valuelist_(from.valuelist_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  valuestring_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_valuestring().empty()) {
    valuestring_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_valuestring(),
      GetArena());
  }
  ::memcpy(&valuedouble_, &from.valuedouble_,
    static_cast<size_t>(reinterpret_cast<char*>(&valueuint8_) -
    reinterpret_cast<char*>(&valuedouble_)) + sizeof(valueuint8_));
  // @@protoc_insertion_point(copy_constructor:tinc.ParameterValue)
}

void ParameterValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParameterValue_tinc_5fprotocol_2eproto.base);
  valuestring_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&valuedouble_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&valueuint8_) -
      reinterpret_cast<char*>(&valuedouble_)) + sizeof(valueuint8_));
}

ParameterValue::~ParameterValue() {
  // @@protoc_insertion_point(destructor:tinc.ParameterValue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ParameterValue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  valuestring_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ParameterValue::ArenaDtor(void* object) {
  ParameterValue* _this = reinterpret_cast< ParameterValue* >(object);
  (void)_this;
}
void ParameterValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParameterValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParameterValue& ParameterValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParameterValue_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void ParameterValue::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.ParameterValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  valuelist_.Clear();
  valuestring_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&valuedouble_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&valueuint8_) -
      reinterpret_cast<char*>(&valuedouble_)) + sizeof(valueuint8_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParameterValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // float valueFloat = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 13)) {
          valuefloat_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // double valueDouble = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          valuedouble_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // int32 valueInt32 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          valueint32_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 valueUint32 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          valueuint32_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 valueInt64 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          valueint64_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 valueUint64 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          valueuint64_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 valueInt8 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          valueint8_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 valueUint8 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          valueuint8_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool valueBool = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          valuebool_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .tinc.ParameterValue valueList = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          ptr -= 2;
          do {
            ptr += 2;
            ptr = ctx->ParseMessage(_internal_add_valuelist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<162>(ptr));
        } else goto handle_unusual;
        continue;
      // string valueString = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 242)) {
          auto str = _internal_mutable_valuestring();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.ParameterValue.valueString"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParameterValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.ParameterValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float valueFloat = 1;
  if (!(this->valuefloat() <= 0 && this->valuefloat() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(1, this->_internal_valuefloat(), target);
  }

  // double valueDouble = 2;
  if (!(this->valuedouble() <= 0 && this->valuedouble() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_valuedouble(), target);
  }

  // int32 valueInt32 = 3;
  if (this->valueint32() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_valueint32(), target);
  }

  // int32 valueUint32 = 4;
  if (this->valueuint32() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_valueuint32(), target);
  }

  // uint64 valueInt64 = 5;
  if (this->valueint64() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_valueint64(), target);
  }

  // uint64 valueUint64 = 6;
  if (this->valueuint64() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(6, this->_internal_valueuint64(), target);
  }

  // uint64 valueInt8 = 7;
  if (this->valueint8() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_valueint8(), target);
  }

  // uint64 valueUint8 = 8;
  if (this->valueuint8() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(8, this->_internal_valueuint8(), target);
  }

  // bool valueBool = 9;
  if (this->valuebool() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(9, this->_internal_valuebool(), target);
  }

  // repeated .tinc.ParameterValue valueList = 20;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_valuelist_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(20, this->_internal_valuelist(i), target, stream);
  }

  // string valueString = 30;
  if (this->valuestring().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_valuestring().data(), static_cast<int>(this->_internal_valuestring().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.ParameterValue.valueString");
    target = stream->WriteStringMaybeAliased(
        30, this->_internal_valuestring(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.ParameterValue)
  return target;
}

size_t ParameterValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.ParameterValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .tinc.ParameterValue valueList = 20;
  total_size += 2UL * this->_internal_valuelist_size();
  for (const auto& msg : this->valuelist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string valueString = 30;
  if (this->valuestring().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_valuestring());
  }

  // double valueDouble = 2;
  if (!(this->valuedouble() <= 0 && this->valuedouble() >= 0)) {
    total_size += 1 + 8;
  }

  // float valueFloat = 1;
  if (!(this->valuefloat() <= 0 && this->valuefloat() >= 0)) {
    total_size += 1 + 4;
  }

  // int32 valueInt32 = 3;
  if (this->valueint32() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_valueint32());
  }

  // uint64 valueInt64 = 5;
  if (this->valueint64() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_valueint64());
  }

  // uint64 valueUint64 = 6;
  if (this->valueuint64() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_valueuint64());
  }

  // int32 valueUint32 = 4;
  if (this->valueuint32() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_valueuint32());
  }

  // bool valueBool = 9;
  if (this->valuebool() != 0) {
    total_size += 1 + 1;
  }

  // uint64 valueInt8 = 7;
  if (this->valueint8() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_valueint8());
  }

  // uint64 valueUint8 = 8;
  if (this->valueuint8() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_valueuint8());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParameterValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.ParameterValue)
  GOOGLE_DCHECK_NE(&from, this);
  const ParameterValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParameterValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.ParameterValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.ParameterValue)
    MergeFrom(*source);
  }
}

void ParameterValue::MergeFrom(const ParameterValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.ParameterValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  valuelist_.MergeFrom(from.valuelist_);
  if (from.valuestring().size() > 0) {
    _internal_set_valuestring(from._internal_valuestring());
  }
  if (!(from.valuedouble() <= 0 && from.valuedouble() >= 0)) {
    _internal_set_valuedouble(from._internal_valuedouble());
  }
  if (!(from.valuefloat() <= 0 && from.valuefloat() >= 0)) {
    _internal_set_valuefloat(from._internal_valuefloat());
  }
  if (from.valueint32() != 0) {
    _internal_set_valueint32(from._internal_valueint32());
  }
  if (from.valueint64() != 0) {
    _internal_set_valueint64(from._internal_valueint64());
  }
  if (from.valueuint64() != 0) {
    _internal_set_valueuint64(from._internal_valueuint64());
  }
  if (from.valueuint32() != 0) {
    _internal_set_valueuint32(from._internal_valueuint32());
  }
  if (from.valuebool() != 0) {
    _internal_set_valuebool(from._internal_valuebool());
  }
  if (from.valueint8() != 0) {
    _internal_set_valueint8(from._internal_valueint8());
  }
  if (from.valueuint8() != 0) {
    _internal_set_valueuint8(from._internal_valueuint8());
  }
}

void ParameterValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.ParameterValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterValue::CopyFrom(const ParameterValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.ParameterValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterValue::IsInitialized() const {
  return true;
}

void ParameterValue::InternalSwap(ParameterValue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  valuelist_.InternalSwap(&other->valuelist_);
  valuestring_.Swap(&other->valuestring_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ParameterValue, valueuint8_)
      + sizeof(ParameterValue::valueuint8_)
      - PROTOBUF_FIELD_OFFSET(ParameterValue, valuedouble_)>(
          reinterpret_cast<char*>(&valuedouble_),
          reinterpret_cast<char*>(&other->valuedouble_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ParameterValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterProcessor::InitAsDefaultInstance() {
}
class RegisterProcessor::_Internal {
 public:
};

RegisterProcessor::RegisterProcessor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  inputfiles_(arena),
  outputfiles_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.RegisterProcessor)
}
RegisterProcessor::RegisterProcessor(const RegisterProcessor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      inputfiles_(from.inputfiles_),
      outputfiles_(from.outputfiles_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  inputdirectory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_inputdirectory().empty()) {
    inputdirectory_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_inputdirectory(),
      GetArena());
  }
  outputdirectory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_outputdirectory().empty()) {
    outputdirectory_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_outputdirectory(),
      GetArena());
  }
  runningdirectory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_runningdirectory().empty()) {
    runningdirectory_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_runningdirectory(),
      GetArena());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:tinc.RegisterProcessor)
}

void RegisterProcessor::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterProcessor_tinc_5fprotocol_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  inputdirectory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  outputdirectory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  runningdirectory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

RegisterProcessor::~RegisterProcessor() {
  // @@protoc_insertion_point(destructor:tinc.RegisterProcessor)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterProcessor::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  inputdirectory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  outputdirectory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  runningdirectory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisterProcessor::ArenaDtor(void* object) {
  RegisterProcessor* _this = reinterpret_cast< RegisterProcessor* >(object);
  (void)_this;
}
void RegisterProcessor::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterProcessor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterProcessor& RegisterProcessor::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterProcessor_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void RegisterProcessor::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.RegisterProcessor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputfiles_.Clear();
  outputfiles_.Clear();
  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  inputdirectory_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  outputdirectory_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  runningdirectory_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterProcessor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.RegisterProcessor.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tinc.ProcessorType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::tinc::ProcessorType>(val));
        } else goto handle_unusual;
        continue;
      // string inputDirectory = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_inputdirectory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.RegisterProcessor.inputDirectory"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string inputFiles = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_inputfiles();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.RegisterProcessor.inputFiles"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // string outputDirectory = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_outputdirectory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.RegisterProcessor.outputDirectory"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string outputFiles = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_outputfiles();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.RegisterProcessor.outputFiles"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // string runningDirectory = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_runningdirectory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.RegisterProcessor.runningDirectory"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterProcessor::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.RegisterProcessor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.RegisterProcessor.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .tinc.ProcessorType type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // string inputDirectory = 3;
  if (this->inputdirectory().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_inputdirectory().data(), static_cast<int>(this->_internal_inputdirectory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.RegisterProcessor.inputDirectory");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_inputdirectory(), target);
  }

  // repeated string inputFiles = 4;
  for (int i = 0, n = this->_internal_inputfiles_size(); i < n; i++) {
    const auto& s = this->_internal_inputfiles(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.RegisterProcessor.inputFiles");
    target = stream->WriteString(4, s, target);
  }

  // string outputDirectory = 5;
  if (this->outputdirectory().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_outputdirectory().data(), static_cast<int>(this->_internal_outputdirectory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.RegisterProcessor.outputDirectory");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_outputdirectory(), target);
  }

  // repeated string outputFiles = 6;
  for (int i = 0, n = this->_internal_outputfiles_size(); i < n; i++) {
    const auto& s = this->_internal_outputfiles(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.RegisterProcessor.outputFiles");
    target = stream->WriteString(6, s, target);
  }

  // string runningDirectory = 7;
  if (this->runningdirectory().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_runningdirectory().data(), static_cast<int>(this->_internal_runningdirectory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.RegisterProcessor.runningDirectory");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_runningdirectory(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.RegisterProcessor)
  return target;
}

size_t RegisterProcessor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.RegisterProcessor)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string inputFiles = 4;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(inputfiles_.size());
  for (int i = 0, n = inputfiles_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      inputfiles_.Get(i));
  }

  // repeated string outputFiles = 6;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(outputfiles_.size());
  for (int i = 0, n = outputfiles_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      outputfiles_.Get(i));
  }

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string inputDirectory = 3;
  if (this->inputdirectory().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_inputdirectory());
  }

  // string outputDirectory = 5;
  if (this->outputdirectory().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_outputdirectory());
  }

  // string runningDirectory = 7;
  if (this->runningdirectory().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_runningdirectory());
  }

  // .tinc.ProcessorType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterProcessor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.RegisterProcessor)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterProcessor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterProcessor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.RegisterProcessor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.RegisterProcessor)
    MergeFrom(*source);
  }
}

void RegisterProcessor::MergeFrom(const RegisterProcessor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.RegisterProcessor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputfiles_.MergeFrom(from.inputfiles_);
  outputfiles_.MergeFrom(from.outputfiles_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.inputdirectory().size() > 0) {
    _internal_set_inputdirectory(from._internal_inputdirectory());
  }
  if (from.outputdirectory().size() > 0) {
    _internal_set_outputdirectory(from._internal_outputdirectory());
  }
  if (from.runningdirectory().size() > 0) {
    _internal_set_runningdirectory(from._internal_runningdirectory());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void RegisterProcessor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.RegisterProcessor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterProcessor::CopyFrom(const RegisterProcessor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.RegisterProcessor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterProcessor::IsInitialized() const {
  return true;
}

void RegisterProcessor::InternalSwap(RegisterProcessor* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  inputfiles_.InternalSwap(&other->inputfiles_);
  outputfiles_.InternalSwap(&other->outputfiles_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  inputdirectory_.Swap(&other->inputdirectory_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  outputdirectory_.Swap(&other->outputdirectory_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  runningdirectory_.Swap(&other->runningdirectory_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterProcessor::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterDataPool::InitAsDefaultInstance() {
}
class RegisterDataPool::_Internal {
 public:
};

RegisterDataPool::RegisterDataPool(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.RegisterDataPool)
}
RegisterDataPool::RegisterDataPool(const RegisterDataPool& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  parameterspaceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_parameterspaceid().empty()) {
    parameterspaceid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_parameterspaceid(),
      GetArena());
  }
  cachedirectory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_cachedirectory().empty()) {
    cachedirectory_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_cachedirectory(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:tinc.RegisterDataPool)
}

void RegisterDataPool::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterDataPool_tinc_5fprotocol_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  parameterspaceid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cachedirectory_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RegisterDataPool::~RegisterDataPool() {
  // @@protoc_insertion_point(destructor:tinc.RegisterDataPool)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterDataPool::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  parameterspaceid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  cachedirectory_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisterDataPool::ArenaDtor(void* object) {
  RegisterDataPool* _this = reinterpret_cast< RegisterDataPool* >(object);
  (void)_this;
}
void RegisterDataPool::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterDataPool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterDataPool& RegisterDataPool::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterDataPool_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void RegisterDataPool::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.RegisterDataPool)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  parameterspaceid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cachedirectory_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterDataPool::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.RegisterDataPool.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string parameterSpaceId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_parameterspaceid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.RegisterDataPool.parameterSpaceId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string cacheDirectory = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_cachedirectory();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.RegisterDataPool.cacheDirectory"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterDataPool::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.RegisterDataPool)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.RegisterDataPool.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string parameterSpaceId = 2;
  if (this->parameterspaceid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_parameterspaceid().data(), static_cast<int>(this->_internal_parameterspaceid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.RegisterDataPool.parameterSpaceId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_parameterspaceid(), target);
  }

  // string cacheDirectory = 3;
  if (this->cachedirectory().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_cachedirectory().data(), static_cast<int>(this->_internal_cachedirectory().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.RegisterDataPool.cacheDirectory");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_cachedirectory(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.RegisterDataPool)
  return target;
}

size_t RegisterDataPool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.RegisterDataPool)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string parameterSpaceId = 2;
  if (this->parameterspaceid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_parameterspaceid());
  }

  // string cacheDirectory = 3;
  if (this->cachedirectory().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_cachedirectory());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterDataPool::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.RegisterDataPool)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterDataPool* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterDataPool>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.RegisterDataPool)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.RegisterDataPool)
    MergeFrom(*source);
  }
}

void RegisterDataPool::MergeFrom(const RegisterDataPool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.RegisterDataPool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.parameterspaceid().size() > 0) {
    _internal_set_parameterspaceid(from._internal_parameterspaceid());
  }
  if (from.cachedirectory().size() > 0) {
    _internal_set_cachedirectory(from._internal_cachedirectory());
  }
}

void RegisterDataPool::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.RegisterDataPool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterDataPool::CopyFrom(const RegisterDataPool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.RegisterDataPool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterDataPool::IsInitialized() const {
  return true;
}

void RegisterDataPool::InternalSwap(RegisterDataPool* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  parameterspaceid_.Swap(&other->parameterspaceid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  cachedirectory_.Swap(&other->cachedirectory_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterDataPool::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterDiskBuffer::InitAsDefaultInstance() {
}
class RegisterDiskBuffer::_Internal {
 public:
};

RegisterDiskBuffer::RegisterDiskBuffer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.RegisterDiskBuffer)
}
RegisterDiskBuffer::RegisterDiskBuffer(const RegisterDiskBuffer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  basefilename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_basefilename().empty()) {
    basefilename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_basefilename(),
      GetArena());
  }
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:tinc.RegisterDiskBuffer)
}

void RegisterDiskBuffer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterDiskBuffer_tinc_5fprotocol_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  basefilename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

RegisterDiskBuffer::~RegisterDiskBuffer() {
  // @@protoc_insertion_point(destructor:tinc.RegisterDiskBuffer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterDiskBuffer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  basefilename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisterDiskBuffer::ArenaDtor(void* object) {
  RegisterDiskBuffer* _this = reinterpret_cast< RegisterDiskBuffer* >(object);
  (void)_this;
}
void RegisterDiskBuffer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterDiskBuffer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterDiskBuffer& RegisterDiskBuffer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterDiskBuffer_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void RegisterDiskBuffer::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.RegisterDiskBuffer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  basefilename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterDiskBuffer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.RegisterDiskBuffer.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tinc.DiskBufferType type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::tinc::DiskBufferType>(val));
        } else goto handle_unusual;
        continue;
      // string baseFilename = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_basefilename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.RegisterDiskBuffer.baseFilename"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string path = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.RegisterDiskBuffer.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterDiskBuffer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.RegisterDiskBuffer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.RegisterDiskBuffer.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .tinc.DiskBufferType type = 2;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_type(), target);
  }

  // string baseFilename = 3;
  if (this->basefilename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_basefilename().data(), static_cast<int>(this->_internal_basefilename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.RegisterDiskBuffer.baseFilename");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_basefilename(), target);
  }

  // string path = 4;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.RegisterDiskBuffer.path");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.RegisterDiskBuffer)
  return target;
}

size_t RegisterDiskBuffer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.RegisterDiskBuffer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string baseFilename = 3;
  if (this->basefilename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_basefilename());
  }

  // string path = 4;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  // .tinc.DiskBufferType type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterDiskBuffer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.RegisterDiskBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterDiskBuffer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterDiskBuffer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.RegisterDiskBuffer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.RegisterDiskBuffer)
    MergeFrom(*source);
  }
}

void RegisterDiskBuffer::MergeFrom(const RegisterDiskBuffer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.RegisterDiskBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.basefilename().size() > 0) {
    _internal_set_basefilename(from._internal_basefilename());
  }
  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void RegisterDiskBuffer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.RegisterDiskBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterDiskBuffer::CopyFrom(const RegisterDiskBuffer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.RegisterDiskBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterDiskBuffer::IsInitialized() const {
  return true;
}

void RegisterDiskBuffer::InternalSwap(RegisterDiskBuffer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  basefilename_.Swap(&other->basefilename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterDiskBuffer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterParameterSpace::InitAsDefaultInstance() {
}
class RegisterParameterSpace::_Internal {
 public:
};

RegisterParameterSpace::RegisterParameterSpace(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.RegisterParameterSpace)
}
RegisterParameterSpace::RegisterParameterSpace(const RegisterParameterSpace& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:tinc.RegisterParameterSpace)
}

void RegisterParameterSpace::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterParameterSpace_tinc_5fprotocol_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

RegisterParameterSpace::~RegisterParameterSpace() {
  // @@protoc_insertion_point(destructor:tinc.RegisterParameterSpace)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterParameterSpace::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void RegisterParameterSpace::ArenaDtor(void* object) {
  RegisterParameterSpace* _this = reinterpret_cast< RegisterParameterSpace* >(object);
  (void)_this;
}
void RegisterParameterSpace::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterParameterSpace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterParameterSpace& RegisterParameterSpace::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterParameterSpace_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void RegisterParameterSpace::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.RegisterParameterSpace)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterParameterSpace::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.RegisterParameterSpace.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterParameterSpace::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.RegisterParameterSpace)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.RegisterParameterSpace.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.RegisterParameterSpace)
  return target;
}

size_t RegisterParameterSpace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.RegisterParameterSpace)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterParameterSpace::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.RegisterParameterSpace)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterParameterSpace* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterParameterSpace>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.RegisterParameterSpace)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.RegisterParameterSpace)
    MergeFrom(*source);
  }
}

void RegisterParameterSpace::MergeFrom(const RegisterParameterSpace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.RegisterParameterSpace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void RegisterParameterSpace::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.RegisterParameterSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterParameterSpace::CopyFrom(const RegisterParameterSpace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.RegisterParameterSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterParameterSpace::IsInitialized() const {
  return true;
}

void RegisterParameterSpace::InternalSwap(RegisterParameterSpace* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterParameterSpace::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RegisterParameter::InitAsDefaultInstance() {
  ::tinc::_RegisterParameter_default_instance_._instance.get_mutable()->defaultvalue_ = const_cast< ::tinc::ParameterValue*>(
      ::tinc::ParameterValue::internal_default_instance());
}
class RegisterParameter::_Internal {
 public:
  static const ::tinc::ParameterValue& defaultvalue(const RegisterParameter* msg);
};

const ::tinc::ParameterValue&
RegisterParameter::_Internal::defaultvalue(const RegisterParameter* msg) {
  return *msg->defaultvalue_;
}
RegisterParameter::RegisterParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.RegisterParameter)
}
RegisterParameter::RegisterParameter(const RegisterParameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_group().empty()) {
    group_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_group(),
      GetArena());
  }
  if (from._internal_has_defaultvalue()) {
    defaultvalue_ = new ::tinc::ParameterValue(*from.defaultvalue_);
  } else {
    defaultvalue_ = nullptr;
  }
  datatype_ = from.datatype_;
  // @@protoc_insertion_point(copy_constructor:tinc.RegisterParameter)
}

void RegisterParameter::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RegisterParameter_tinc_5fprotocol_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&defaultvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&datatype_) -
      reinterpret_cast<char*>(&defaultvalue_)) + sizeof(datatype_));
}

RegisterParameter::~RegisterParameter() {
  // @@protoc_insertion_point(destructor:tinc.RegisterParameter)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RegisterParameter::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  group_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete defaultvalue_;
}

void RegisterParameter::ArenaDtor(void* object) {
  RegisterParameter* _this = reinterpret_cast< RegisterParameter* >(object);
  (void)_this;
}
void RegisterParameter::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RegisterParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RegisterParameter& RegisterParameter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RegisterParameter_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void RegisterParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.RegisterParameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  group_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && defaultvalue_ != nullptr) {
    delete defaultvalue_;
  }
  defaultvalue_ = nullptr;
  datatype_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RegisterParameter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.RegisterParameter.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string group = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_group();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.RegisterParameter.group"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tinc.ParameterDataType dataType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_datatype(static_cast<::tinc::ParameterDataType>(val));
        } else goto handle_unusual;
        continue;
      // .tinc.ParameterValue defaultValue = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_defaultvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RegisterParameter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.RegisterParameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.RegisterParameter.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string group = 2;
  if (this->group().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_group().data(), static_cast<int>(this->_internal_group().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.RegisterParameter.group");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_group(), target);
  }

  // .tinc.ParameterDataType dataType = 3;
  if (this->datatype() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_datatype(), target);
  }

  // .tinc.ParameterValue defaultValue = 4;
  if (this->has_defaultvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::defaultvalue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.RegisterParameter)
  return target;
}

size_t RegisterParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.RegisterParameter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string group = 2;
  if (this->group().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_group());
  }

  // .tinc.ParameterValue defaultValue = 4;
  if (this->has_defaultvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *defaultvalue_);
  }

  // .tinc.ParameterDataType dataType = 3;
  if (this->datatype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_datatype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterParameter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.RegisterParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterParameter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RegisterParameter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.RegisterParameter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.RegisterParameter)
    MergeFrom(*source);
  }
}

void RegisterParameter::MergeFrom(const RegisterParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.RegisterParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.group().size() > 0) {
    _internal_set_group(from._internal_group());
  }
  if (from.has_defaultvalue()) {
    _internal_mutable_defaultvalue()->::tinc::ParameterValue::MergeFrom(from._internal_defaultvalue());
  }
  if (from.datatype() != 0) {
    _internal_set_datatype(from._internal_datatype());
  }
}

void RegisterParameter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.RegisterParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterParameter::CopyFrom(const RegisterParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.RegisterParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterParameter::IsInitialized() const {
  return true;
}

void RegisterParameter::InternalSwap(RegisterParameter* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  group_.Swap(&other->group_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RegisterParameter, datatype_)
      + sizeof(RegisterParameter::datatype_)
      - PROTOBUF_FIELD_OFFSET(RegisterParameter, defaultvalue_)>(
          reinterpret_cast<char*>(&defaultvalue_),
          reinterpret_cast<char*>(&other->defaultvalue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RegisterParameter::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ParameterSpaceValues::InitAsDefaultInstance() {
}
class ParameterSpaceValues::_Internal {
 public:
};

ParameterSpaceValues::ParameterSpaceValues(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  ids_(arena),
  values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.ParameterSpaceValues)
}
ParameterSpaceValues::ParameterSpaceValues(const ParameterSpaceValues& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      ids_(from.ids_),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tinc.ParameterSpaceValues)
}

void ParameterSpaceValues::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParameterSpaceValues_tinc_5fprotocol_2eproto.base);
}

ParameterSpaceValues::~ParameterSpaceValues() {
  // @@protoc_insertion_point(destructor:tinc.ParameterSpaceValues)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ParameterSpaceValues::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ParameterSpaceValues::ArenaDtor(void* object) {
  ParameterSpaceValues* _this = reinterpret_cast< ParameterSpaceValues* >(object);
  (void)_this;
}
void ParameterSpaceValues::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParameterSpaceValues::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParameterSpaceValues& ParameterSpaceValues::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParameterSpaceValues_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void ParameterSpaceValues::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.ParameterSpaceValues)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ids_.Clear();
  values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParameterSpaceValues::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_ids();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.ParameterSpaceValues.ids"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .tinc.ParameterValue values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParameterSpaceValues::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.ParameterSpaceValues)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string ids = 1;
  for (int i = 0, n = this->_internal_ids_size(); i < n; i++) {
    const auto& s = this->_internal_ids(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.ParameterSpaceValues.ids");
    target = stream->WriteString(1, s, target);
  }

  // repeated .tinc.ParameterValue values = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_values_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_values(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.ParameterSpaceValues)
  return target;
}

size_t ParameterSpaceValues::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.ParameterSpaceValues)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string ids = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(ids_.size());
  for (int i = 0, n = ids_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      ids_.Get(i));
  }

  // repeated .tinc.ParameterValue values = 2;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParameterSpaceValues::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.ParameterSpaceValues)
  GOOGLE_DCHECK_NE(&from, this);
  const ParameterSpaceValues* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParameterSpaceValues>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.ParameterSpaceValues)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.ParameterSpaceValues)
    MergeFrom(*source);
  }
}

void ParameterSpaceValues::MergeFrom(const ParameterSpaceValues& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.ParameterSpaceValues)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ids_.MergeFrom(from.ids_);
  values_.MergeFrom(from.values_);
}

void ParameterSpaceValues::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.ParameterSpaceValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterSpaceValues::CopyFrom(const ParameterSpaceValues& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.ParameterSpaceValues)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterSpaceValues::IsInitialized() const {
  return true;
}

void ParameterSpaceValues::InternalSwap(ParameterSpaceValues* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ids_.InternalSwap(&other->ids_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParameterSpaceValues::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConfigureParameter::InitAsDefaultInstance() {
  ::tinc::_ConfigureParameter_default_instance_._instance.get_mutable()->configurationvalue_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class ConfigureParameter::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& configurationvalue(const ConfigureParameter* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
ConfigureParameter::_Internal::configurationvalue(const ConfigureParameter* msg) {
  return *msg->configurationvalue_;
}
void ConfigureParameter::clear_configurationvalue() {
  if (GetArena() == nullptr && configurationvalue_ != nullptr) {
    delete configurationvalue_;
  }
  configurationvalue_ = nullptr;
}
ConfigureParameter::ConfigureParameter(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.ConfigureParameter)
}
ConfigureParameter::ConfigureParameter(const ConfigureParameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  if (from._internal_has_configurationvalue()) {
    configurationvalue_ = new PROTOBUF_NAMESPACE_ID::Any(*from.configurationvalue_);
  } else {
    configurationvalue_ = nullptr;
  }
  configurationkey_ = from.configurationkey_;
  // @@protoc_insertion_point(copy_constructor:tinc.ConfigureParameter)
}

void ConfigureParameter::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigureParameter_tinc_5fprotocol_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&configurationvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&configurationkey_) -
      reinterpret_cast<char*>(&configurationvalue_)) + sizeof(configurationkey_));
}

ConfigureParameter::~ConfigureParameter() {
  // @@protoc_insertion_point(destructor:tinc.ConfigureParameter)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ConfigureParameter::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete configurationvalue_;
}

void ConfigureParameter::ArenaDtor(void* object) {
  ConfigureParameter* _this = reinterpret_cast< ConfigureParameter* >(object);
  (void)_this;
}
void ConfigureParameter::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConfigureParameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigureParameter& ConfigureParameter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigureParameter_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void ConfigureParameter::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.ConfigureParameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && configurationvalue_ != nullptr) {
    delete configurationvalue_;
  }
  configurationvalue_ = nullptr;
  configurationkey_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigureParameter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.ConfigureParameter.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tinc.ParameterConfigureType configurationKey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_configurationkey(static_cast<::tinc::ParameterConfigureType>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any configurationValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_configurationvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigureParameter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.ConfigureParameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.ConfigureParameter.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .tinc.ParameterConfigureType configurationKey = 2;
  if (this->configurationkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_configurationkey(), target);
  }

  // .google.protobuf.Any configurationValue = 3;
  if (this->has_configurationvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::configurationvalue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.ConfigureParameter)
  return target;
}

size_t ConfigureParameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.ConfigureParameter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .google.protobuf.Any configurationValue = 3;
  if (this->has_configurationvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *configurationvalue_);
  }

  // .tinc.ParameterConfigureType configurationKey = 2;
  if (this->configurationkey() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_configurationkey());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigureParameter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.ConfigureParameter)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigureParameter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigureParameter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.ConfigureParameter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.ConfigureParameter)
    MergeFrom(*source);
  }
}

void ConfigureParameter::MergeFrom(const ConfigureParameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.ConfigureParameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.has_configurationvalue()) {
    _internal_mutable_configurationvalue()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_configurationvalue());
  }
  if (from.configurationkey() != 0) {
    _internal_set_configurationkey(from._internal_configurationkey());
  }
}

void ConfigureParameter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.ConfigureParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigureParameter::CopyFrom(const ConfigureParameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.ConfigureParameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigureParameter::IsInitialized() const {
  return true;
}

void ConfigureParameter::InternalSwap(ConfigureParameter* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConfigureParameter, configurationkey_)
      + sizeof(ConfigureParameter::configurationkey_)
      - PROTOBUF_FIELD_OFFSET(ConfigureParameter, configurationvalue_)>(
          reinterpret_cast<char*>(&configurationvalue_),
          reinterpret_cast<char*>(&other->configurationvalue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigureParameter::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConfigureParameterSpace::InitAsDefaultInstance() {
  ::tinc::_ConfigureParameterSpace_default_instance_._instance.get_mutable()->configurationvalue_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class ConfigureParameterSpace::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& configurationvalue(const ConfigureParameterSpace* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
ConfigureParameterSpace::_Internal::configurationvalue(const ConfigureParameterSpace* msg) {
  return *msg->configurationvalue_;
}
void ConfigureParameterSpace::clear_configurationvalue() {
  if (GetArena() == nullptr && configurationvalue_ != nullptr) {
    delete configurationvalue_;
  }
  configurationvalue_ = nullptr;
}
ConfigureParameterSpace::ConfigureParameterSpace(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.ConfigureParameterSpace)
}
ConfigureParameterSpace::ConfigureParameterSpace(const ConfigureParameterSpace& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  if (from._internal_has_configurationvalue()) {
    configurationvalue_ = new PROTOBUF_NAMESPACE_ID::Any(*from.configurationvalue_);
  } else {
    configurationvalue_ = nullptr;
  }
  configurationkey_ = from.configurationkey_;
  // @@protoc_insertion_point(copy_constructor:tinc.ConfigureParameterSpace)
}

void ConfigureParameterSpace::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigureParameterSpace_tinc_5fprotocol_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&configurationvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&configurationkey_) -
      reinterpret_cast<char*>(&configurationvalue_)) + sizeof(configurationkey_));
}

ConfigureParameterSpace::~ConfigureParameterSpace() {
  // @@protoc_insertion_point(destructor:tinc.ConfigureParameterSpace)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ConfigureParameterSpace::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete configurationvalue_;
}

void ConfigureParameterSpace::ArenaDtor(void* object) {
  ConfigureParameterSpace* _this = reinterpret_cast< ConfigureParameterSpace* >(object);
  (void)_this;
}
void ConfigureParameterSpace::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConfigureParameterSpace::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigureParameterSpace& ConfigureParameterSpace::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigureParameterSpace_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void ConfigureParameterSpace::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.ConfigureParameterSpace)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && configurationvalue_ != nullptr) {
    delete configurationvalue_;
  }
  configurationvalue_ = nullptr;
  configurationkey_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigureParameterSpace::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.ConfigureParameterSpace.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tinc.ParameterSpaceConfigureType configurationKey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_configurationkey(static_cast<::tinc::ParameterSpaceConfigureType>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any configurationValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_configurationvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigureParameterSpace::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.ConfigureParameterSpace)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.ConfigureParameterSpace.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .tinc.ParameterSpaceConfigureType configurationKey = 2;
  if (this->configurationkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_configurationkey(), target);
  }

  // .google.protobuf.Any configurationValue = 3;
  if (this->has_configurationvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::configurationvalue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.ConfigureParameterSpace)
  return target;
}

size_t ConfigureParameterSpace::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.ConfigureParameterSpace)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .google.protobuf.Any configurationValue = 3;
  if (this->has_configurationvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *configurationvalue_);
  }

  // .tinc.ParameterSpaceConfigureType configurationKey = 2;
  if (this->configurationkey() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_configurationkey());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigureParameterSpace::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.ConfigureParameterSpace)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigureParameterSpace* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigureParameterSpace>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.ConfigureParameterSpace)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.ConfigureParameterSpace)
    MergeFrom(*source);
  }
}

void ConfigureParameterSpace::MergeFrom(const ConfigureParameterSpace& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.ConfigureParameterSpace)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.has_configurationvalue()) {
    _internal_mutable_configurationvalue()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_configurationvalue());
  }
  if (from.configurationkey() != 0) {
    _internal_set_configurationkey(from._internal_configurationkey());
  }
}

void ConfigureParameterSpace::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.ConfigureParameterSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigureParameterSpace::CopyFrom(const ConfigureParameterSpace& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.ConfigureParameterSpace)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigureParameterSpace::IsInitialized() const {
  return true;
}

void ConfigureParameterSpace::InternalSwap(ConfigureParameterSpace* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConfigureParameterSpace, configurationkey_)
      + sizeof(ConfigureParameterSpace::configurationkey_)
      - PROTOBUF_FIELD_OFFSET(ConfigureParameterSpace, configurationvalue_)>(
          reinterpret_cast<char*>(&configurationvalue_),
          reinterpret_cast<char*>(&other->configurationvalue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigureParameterSpace::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConfigureProcessor::InitAsDefaultInstance() {
  ::tinc::_ConfigureProcessor_default_instance_._instance.get_mutable()->configurationvalue_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class ConfigureProcessor::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& configurationvalue(const ConfigureProcessor* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
ConfigureProcessor::_Internal::configurationvalue(const ConfigureProcessor* msg) {
  return *msg->configurationvalue_;
}
void ConfigureProcessor::clear_configurationvalue() {
  if (GetArena() == nullptr && configurationvalue_ != nullptr) {
    delete configurationvalue_;
  }
  configurationvalue_ = nullptr;
}
ConfigureProcessor::ConfigureProcessor(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.ConfigureProcessor)
}
ConfigureProcessor::ConfigureProcessor(const ConfigureProcessor& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  configurationkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_configurationkey().empty()) {
    configurationkey_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_configurationkey(),
      GetArena());
  }
  if (from._internal_has_configurationvalue()) {
    configurationvalue_ = new PROTOBUF_NAMESPACE_ID::Any(*from.configurationvalue_);
  } else {
    configurationvalue_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:tinc.ConfigureProcessor)
}

void ConfigureProcessor::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigureProcessor_tinc_5fprotocol_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  configurationkey_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  configurationvalue_ = nullptr;
}

ConfigureProcessor::~ConfigureProcessor() {
  // @@protoc_insertion_point(destructor:tinc.ConfigureProcessor)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ConfigureProcessor::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  configurationkey_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete configurationvalue_;
}

void ConfigureProcessor::ArenaDtor(void* object) {
  ConfigureProcessor* _this = reinterpret_cast< ConfigureProcessor* >(object);
  (void)_this;
}
void ConfigureProcessor::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConfigureProcessor::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigureProcessor& ConfigureProcessor::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigureProcessor_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void ConfigureProcessor::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.ConfigureProcessor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  configurationkey_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && configurationvalue_ != nullptr) {
    delete configurationvalue_;
  }
  configurationvalue_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigureProcessor::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.ConfigureProcessor.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string configurationKey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_configurationkey();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.ConfigureProcessor.configurationKey"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any configurationValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_configurationvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigureProcessor::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.ConfigureProcessor)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.ConfigureProcessor.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // string configurationKey = 2;
  if (this->configurationkey().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_configurationkey().data(), static_cast<int>(this->_internal_configurationkey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.ConfigureProcessor.configurationKey");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_configurationkey(), target);
  }

  // .google.protobuf.Any configurationValue = 3;
  if (this->has_configurationvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::configurationvalue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.ConfigureProcessor)
  return target;
}

size_t ConfigureProcessor::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.ConfigureProcessor)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string configurationKey = 2;
  if (this->configurationkey().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_configurationkey());
  }

  // .google.protobuf.Any configurationValue = 3;
  if (this->has_configurationvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *configurationvalue_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigureProcessor::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.ConfigureProcessor)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigureProcessor* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigureProcessor>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.ConfigureProcessor)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.ConfigureProcessor)
    MergeFrom(*source);
  }
}

void ConfigureProcessor::MergeFrom(const ConfigureProcessor& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.ConfigureProcessor)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.configurationkey().size() > 0) {
    _internal_set_configurationkey(from._internal_configurationkey());
  }
  if (from.has_configurationvalue()) {
    _internal_mutable_configurationvalue()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_configurationvalue());
  }
}

void ConfigureProcessor::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.ConfigureProcessor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigureProcessor::CopyFrom(const ConfigureProcessor& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.ConfigureProcessor)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigureProcessor::IsInitialized() const {
  return true;
}

void ConfigureProcessor::InternalSwap(ConfigureProcessor* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  configurationkey_.Swap(&other->configurationkey_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(configurationvalue_, other->configurationvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigureProcessor::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConfigureDiskBuffer::InitAsDefaultInstance() {
  ::tinc::_ConfigureDiskBuffer_default_instance_._instance.get_mutable()->configurationvalue_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class ConfigureDiskBuffer::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& configurationvalue(const ConfigureDiskBuffer* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
ConfigureDiskBuffer::_Internal::configurationvalue(const ConfigureDiskBuffer* msg) {
  return *msg->configurationvalue_;
}
void ConfigureDiskBuffer::clear_configurationvalue() {
  if (GetArena() == nullptr && configurationvalue_ != nullptr) {
    delete configurationvalue_;
  }
  configurationvalue_ = nullptr;
}
ConfigureDiskBuffer::ConfigureDiskBuffer(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.ConfigureDiskBuffer)
}
ConfigureDiskBuffer::ConfigureDiskBuffer(const ConfigureDiskBuffer& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  if (from._internal_has_configurationvalue()) {
    configurationvalue_ = new PROTOBUF_NAMESPACE_ID::Any(*from.configurationvalue_);
  } else {
    configurationvalue_ = nullptr;
  }
  configurationkey_ = from.configurationkey_;
  // @@protoc_insertion_point(copy_constructor:tinc.ConfigureDiskBuffer)
}

void ConfigureDiskBuffer::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigureDiskBuffer_tinc_5fprotocol_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&configurationvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&configurationkey_) -
      reinterpret_cast<char*>(&configurationvalue_)) + sizeof(configurationkey_));
}

ConfigureDiskBuffer::~ConfigureDiskBuffer() {
  // @@protoc_insertion_point(destructor:tinc.ConfigureDiskBuffer)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ConfigureDiskBuffer::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete configurationvalue_;
}

void ConfigureDiskBuffer::ArenaDtor(void* object) {
  ConfigureDiskBuffer* _this = reinterpret_cast< ConfigureDiskBuffer* >(object);
  (void)_this;
}
void ConfigureDiskBuffer::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConfigureDiskBuffer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigureDiskBuffer& ConfigureDiskBuffer::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigureDiskBuffer_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void ConfigureDiskBuffer::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.ConfigureDiskBuffer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && configurationvalue_ != nullptr) {
    delete configurationvalue_;
  }
  configurationvalue_ = nullptr;
  configurationkey_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigureDiskBuffer::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.ConfigureDiskBuffer.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tinc.DiskBufferConfigureType configurationKey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_configurationkey(static_cast<::tinc::DiskBufferConfigureType>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any configurationValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_configurationvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigureDiskBuffer::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.ConfigureDiskBuffer)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.ConfigureDiskBuffer.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .tinc.DiskBufferConfigureType configurationKey = 2;
  if (this->configurationkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_configurationkey(), target);
  }

  // .google.protobuf.Any configurationValue = 3;
  if (this->has_configurationvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::configurationvalue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.ConfigureDiskBuffer)
  return target;
}

size_t ConfigureDiskBuffer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.ConfigureDiskBuffer)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .google.protobuf.Any configurationValue = 3;
  if (this->has_configurationvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *configurationvalue_);
  }

  // .tinc.DiskBufferConfigureType configurationKey = 2;
  if (this->configurationkey() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_configurationkey());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigureDiskBuffer::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.ConfigureDiskBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigureDiskBuffer* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigureDiskBuffer>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.ConfigureDiskBuffer)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.ConfigureDiskBuffer)
    MergeFrom(*source);
  }
}

void ConfigureDiskBuffer::MergeFrom(const ConfigureDiskBuffer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.ConfigureDiskBuffer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.has_configurationvalue()) {
    _internal_mutable_configurationvalue()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_configurationvalue());
  }
  if (from.configurationkey() != 0) {
    _internal_set_configurationkey(from._internal_configurationkey());
  }
}

void ConfigureDiskBuffer::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.ConfigureDiskBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigureDiskBuffer::CopyFrom(const ConfigureDiskBuffer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.ConfigureDiskBuffer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigureDiskBuffer::IsInitialized() const {
  return true;
}

void ConfigureDiskBuffer::InternalSwap(ConfigureDiskBuffer* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConfigureDiskBuffer, configurationkey_)
      + sizeof(ConfigureDiskBuffer::configurationkey_)
      - PROTOBUF_FIELD_OFFSET(ConfigureDiskBuffer, configurationvalue_)>(
          reinterpret_cast<char*>(&configurationvalue_),
          reinterpret_cast<char*>(&other->configurationvalue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigureDiskBuffer::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ConfigureDataPool::InitAsDefaultInstance() {
  ::tinc::_ConfigureDataPool_default_instance_._instance.get_mutable()->configurationvalue_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class ConfigureDataPool::_Internal {
 public:
  static const PROTOBUF_NAMESPACE_ID::Any& configurationvalue(const ConfigureDataPool* msg);
};

const PROTOBUF_NAMESPACE_ID::Any&
ConfigureDataPool::_Internal::configurationvalue(const ConfigureDataPool* msg) {
  return *msg->configurationvalue_;
}
void ConfigureDataPool::clear_configurationvalue() {
  if (GetArena() == nullptr && configurationvalue_ != nullptr) {
    delete configurationvalue_;
  }
  configurationvalue_ = nullptr;
}
ConfigureDataPool::ConfigureDataPool(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.ConfigureDataPool)
}
ConfigureDataPool::ConfigureDataPool(const ConfigureDataPool& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  if (from._internal_has_configurationvalue()) {
    configurationvalue_ = new PROTOBUF_NAMESPACE_ID::Any(*from.configurationvalue_);
  } else {
    configurationvalue_ = nullptr;
  }
  configurationkey_ = from.configurationkey_;
  // @@protoc_insertion_point(copy_constructor:tinc.ConfigureDataPool)
}

void ConfigureDataPool::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ConfigureDataPool_tinc_5fprotocol_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&configurationvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&configurationkey_) -
      reinterpret_cast<char*>(&configurationvalue_)) + sizeof(configurationkey_));
}

ConfigureDataPool::~ConfigureDataPool() {
  // @@protoc_insertion_point(destructor:tinc.ConfigureDataPool)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ConfigureDataPool::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete configurationvalue_;
}

void ConfigureDataPool::ArenaDtor(void* object) {
  ConfigureDataPool* _this = reinterpret_cast< ConfigureDataPool* >(object);
  (void)_this;
}
void ConfigureDataPool::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ConfigureDataPool::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ConfigureDataPool& ConfigureDataPool::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ConfigureDataPool_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void ConfigureDataPool::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.ConfigureDataPool)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && configurationvalue_ != nullptr) {
    delete configurationvalue_;
  }
  configurationvalue_ = nullptr;
  configurationkey_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ConfigureDataPool::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.ConfigureDataPool.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tinc.DataPoolConfigureType configurationKey = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_configurationkey(static_cast<::tinc::DataPoolConfigureType>(val));
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any configurationValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_configurationvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ConfigureDataPool::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.ConfigureDataPool)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.ConfigureDataPool.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  // .tinc.DataPoolConfigureType configurationKey = 2;
  if (this->configurationkey() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_configurationkey(), target);
  }

  // .google.protobuf.Any configurationValue = 3;
  if (this->has_configurationvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::configurationvalue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.ConfigureDataPool)
  return target;
}

size_t ConfigureDataPool::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.ConfigureDataPool)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // .google.protobuf.Any configurationValue = 3;
  if (this->has_configurationvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *configurationvalue_);
  }

  // .tinc.DataPoolConfigureType configurationKey = 2;
  if (this->configurationkey() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_configurationkey());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ConfigureDataPool::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.ConfigureDataPool)
  GOOGLE_DCHECK_NE(&from, this);
  const ConfigureDataPool* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ConfigureDataPool>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.ConfigureDataPool)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.ConfigureDataPool)
    MergeFrom(*source);
  }
}

void ConfigureDataPool::MergeFrom(const ConfigureDataPool& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.ConfigureDataPool)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.has_configurationvalue()) {
    _internal_mutable_configurationvalue()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_configurationvalue());
  }
  if (from.configurationkey() != 0) {
    _internal_set_configurationkey(from._internal_configurationkey());
  }
}

void ConfigureDataPool::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.ConfigureDataPool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ConfigureDataPool::CopyFrom(const ConfigureDataPool& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.ConfigureDataPool)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ConfigureDataPool::IsInitialized() const {
  return true;
}

void ConfigureDataPool::InternalSwap(ConfigureDataPool* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConfigureDataPool, configurationkey_)
      + sizeof(ConfigureDataPool::configurationkey_)
      - PROTOBUF_FIELD_OFFSET(ConfigureDataPool, configurationvalue_)>(
          reinterpret_cast<char*>(&configurationvalue_),
          reinterpret_cast<char*>(&other->configurationvalue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ConfigureDataPool::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Command::InitAsDefaultInstance() {
  ::tinc::_Command_default_instance_._instance.get_mutable()->id_ = const_cast< ::tinc::ObjectId*>(
      ::tinc::ObjectId::internal_default_instance());
  ::tinc::_Command_default_instance_._instance.get_mutable()->details_ = const_cast< PROTOBUF_NAMESPACE_ID::Any*>(
      PROTOBUF_NAMESPACE_ID::Any::internal_default_instance());
}
class Command::_Internal {
 public:
  static const ::tinc::ObjectId& id(const Command* msg);
  static const PROTOBUF_NAMESPACE_ID::Any& details(const Command* msg);
};

const ::tinc::ObjectId&
Command::_Internal::id(const Command* msg) {
  return *msg->id_;
}
const PROTOBUF_NAMESPACE_ID::Any&
Command::_Internal::details(const Command* msg) {
  return *msg->details_;
}
void Command::clear_details() {
  if (GetArena() == nullptr && details_ != nullptr) {
    delete details_;
  }
  details_ = nullptr;
}
Command::Command(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.Command)
}
Command::Command(const Command& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_id()) {
    id_ = new ::tinc::ObjectId(*from.id_);
  } else {
    id_ = nullptr;
  }
  if (from._internal_has_details()) {
    details_ = new PROTOBUF_NAMESPACE_ID::Any(*from.details_);
  } else {
    details_ = nullptr;
  }
  message_id_ = from.message_id_;
  // @@protoc_insertion_point(copy_constructor:tinc.Command)
}

void Command::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Command_tinc_5fprotocol_2eproto.base);
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&message_id_) -
      reinterpret_cast<char*>(&id_)) + sizeof(message_id_));
}

Command::~Command() {
  // @@protoc_insertion_point(destructor:tinc.Command)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Command::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete details_;
}

void Command::ArenaDtor(void* object) {
  Command* _this = reinterpret_cast< Command* >(object);
  (void)_this;
}
void Command::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Command::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Command& Command::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Command_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void Command::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.Command)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && id_ != nullptr) {
    delete id_;
  }
  id_ = nullptr;
  if (GetArena() == nullptr && details_ != nullptr) {
    delete details_;
  }
  details_ = nullptr;
  message_id_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Command::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 message_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          message_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .tinc.ObjectId id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_id(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .google.protobuf.Any details = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_details(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Command::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.Command)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 message_id = 1;
  if (this->message_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_message_id(), target);
  }

  // .tinc.ObjectId id = 2;
  if (this->has_id()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::id(this), target, stream);
  }

  // .google.protobuf.Any details = 3;
  if (this->has_details()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::details(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.Command)
  return target;
}

size_t Command::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.Command)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .tinc.ObjectId id = 2;
  if (this->has_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // .google.protobuf.Any details = 3;
  if (this->has_details()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *details_);
  }

  // uint64 message_id = 1;
  if (this->message_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_message_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Command::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.Command)
  GOOGLE_DCHECK_NE(&from, this);
  const Command* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Command>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.Command)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.Command)
    MergeFrom(*source);
  }
}

void Command::MergeFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.Command)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    _internal_mutable_id()->::tinc::ObjectId::MergeFrom(from._internal_id());
  }
  if (from.has_details()) {
    _internal_mutable_details()->PROTOBUF_NAMESPACE_ID::Any::MergeFrom(from._internal_details());
  }
  if (from.message_id() != 0) {
    _internal_set_message_id(from._internal_message_id());
  }
}

void Command::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Command::CopyFrom(const Command& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.Command)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Command::IsInitialized() const {
  return true;
}

void Command::InternalSwap(Command* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Command, message_id_)
      + sizeof(Command::message_id_)
      - PROTOBUF_FIELD_OFFSET(Command, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Command::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CommandErrorPayload::InitAsDefaultInstance() {
}
class CommandErrorPayload::_Internal {
 public:
};

CommandErrorPayload::CommandErrorPayload(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.CommandErrorPayload)
}
CommandErrorPayload::CommandErrorPayload(const CommandErrorPayload& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_error().empty()) {
    error_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_error(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:tinc.CommandErrorPayload)
}

void CommandErrorPayload::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CommandErrorPayload_tinc_5fprotocol_2eproto.base);
  error_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CommandErrorPayload::~CommandErrorPayload() {
  // @@protoc_insertion_point(destructor:tinc.CommandErrorPayload)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CommandErrorPayload::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  error_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CommandErrorPayload::ArenaDtor(void* object) {
  CommandErrorPayload* _this = reinterpret_cast< CommandErrorPayload* >(object);
  (void)_this;
}
void CommandErrorPayload::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CommandErrorPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CommandErrorPayload& CommandErrorPayload::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CommandErrorPayload_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void CommandErrorPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.CommandErrorPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  error_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CommandErrorPayload::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_error();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.CommandErrorPayload.error"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CommandErrorPayload::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.CommandErrorPayload)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string error = 1;
  if (this->error().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_error().data(), static_cast<int>(this->_internal_error().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.CommandErrorPayload.error");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_error(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.CommandErrorPayload)
  return target;
}

size_t CommandErrorPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.CommandErrorPayload)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string error = 1;
  if (this->error().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_error());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CommandErrorPayload::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.CommandErrorPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const CommandErrorPayload* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CommandErrorPayload>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.CommandErrorPayload)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.CommandErrorPayload)
    MergeFrom(*source);
  }
}

void CommandErrorPayload::MergeFrom(const CommandErrorPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.CommandErrorPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.error().size() > 0) {
    _internal_set_error(from._internal_error());
  }
}

void CommandErrorPayload::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.CommandErrorPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CommandErrorPayload::CopyFrom(const CommandErrorPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.CommandErrorPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CommandErrorPayload::IsInitialized() const {
  return true;
}

void CommandErrorPayload::InternalSwap(CommandErrorPayload* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  error_.Swap(&other->error_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CommandErrorPayload::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ParameterRequestChoiceElements::InitAsDefaultInstance() {
}
class ParameterRequestChoiceElements::_Internal {
 public:
};

ParameterRequestChoiceElements::ParameterRequestChoiceElements(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.ParameterRequestChoiceElements)
}
ParameterRequestChoiceElements::ParameterRequestChoiceElements(const ParameterRequestChoiceElements& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tinc.ParameterRequestChoiceElements)
}

void ParameterRequestChoiceElements::SharedCtor() {
}

ParameterRequestChoiceElements::~ParameterRequestChoiceElements() {
  // @@protoc_insertion_point(destructor:tinc.ParameterRequestChoiceElements)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ParameterRequestChoiceElements::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ParameterRequestChoiceElements::ArenaDtor(void* object) {
  ParameterRequestChoiceElements* _this = reinterpret_cast< ParameterRequestChoiceElements* >(object);
  (void)_this;
}
void ParameterRequestChoiceElements::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParameterRequestChoiceElements::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParameterRequestChoiceElements& ParameterRequestChoiceElements::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParameterRequestChoiceElements_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void ParameterRequestChoiceElements::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.ParameterRequestChoiceElements)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParameterRequestChoiceElements::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParameterRequestChoiceElements::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.ParameterRequestChoiceElements)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.ParameterRequestChoiceElements)
  return target;
}

size_t ParameterRequestChoiceElements::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.ParameterRequestChoiceElements)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParameterRequestChoiceElements::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.ParameterRequestChoiceElements)
  GOOGLE_DCHECK_NE(&from, this);
  const ParameterRequestChoiceElements* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParameterRequestChoiceElements>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.ParameterRequestChoiceElements)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.ParameterRequestChoiceElements)
    MergeFrom(*source);
  }
}

void ParameterRequestChoiceElements::MergeFrom(const ParameterRequestChoiceElements& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.ParameterRequestChoiceElements)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ParameterRequestChoiceElements::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.ParameterRequestChoiceElements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterRequestChoiceElements::CopyFrom(const ParameterRequestChoiceElements& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.ParameterRequestChoiceElements)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterRequestChoiceElements::IsInitialized() const {
  return true;
}

void ParameterRequestChoiceElements::InternalSwap(ParameterRequestChoiceElements* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParameterRequestChoiceElements::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ParameterRequestChoiceElementsReply::InitAsDefaultInstance() {
}
class ParameterRequestChoiceElementsReply::_Internal {
 public:
};

ParameterRequestChoiceElementsReply::ParameterRequestChoiceElementsReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  elements_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.ParameterRequestChoiceElementsReply)
}
ParameterRequestChoiceElementsReply::ParameterRequestChoiceElementsReply(const ParameterRequestChoiceElementsReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      elements_(from.elements_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tinc.ParameterRequestChoiceElementsReply)
}

void ParameterRequestChoiceElementsReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParameterRequestChoiceElementsReply_tinc_5fprotocol_2eproto.base);
}

ParameterRequestChoiceElementsReply::~ParameterRequestChoiceElementsReply() {
  // @@protoc_insertion_point(destructor:tinc.ParameterRequestChoiceElementsReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ParameterRequestChoiceElementsReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ParameterRequestChoiceElementsReply::ArenaDtor(void* object) {
  ParameterRequestChoiceElementsReply* _this = reinterpret_cast< ParameterRequestChoiceElementsReply* >(object);
  (void)_this;
}
void ParameterRequestChoiceElementsReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParameterRequestChoiceElementsReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParameterRequestChoiceElementsReply& ParameterRequestChoiceElementsReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParameterRequestChoiceElementsReply_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void ParameterRequestChoiceElementsReply::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.ParameterRequestChoiceElementsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  elements_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParameterRequestChoiceElementsReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string elements = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_elements();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.ParameterRequestChoiceElementsReply.elements"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParameterRequestChoiceElementsReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.ParameterRequestChoiceElementsReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string elements = 1;
  for (int i = 0, n = this->_internal_elements_size(); i < n; i++) {
    const auto& s = this->_internal_elements(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.ParameterRequestChoiceElementsReply.elements");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.ParameterRequestChoiceElementsReply)
  return target;
}

size_t ParameterRequestChoiceElementsReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.ParameterRequestChoiceElementsReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string elements = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(elements_.size());
  for (int i = 0, n = elements_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      elements_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParameterRequestChoiceElementsReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.ParameterRequestChoiceElementsReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ParameterRequestChoiceElementsReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParameterRequestChoiceElementsReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.ParameterRequestChoiceElementsReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.ParameterRequestChoiceElementsReply)
    MergeFrom(*source);
  }
}

void ParameterRequestChoiceElementsReply::MergeFrom(const ParameterRequestChoiceElementsReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.ParameterRequestChoiceElementsReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  elements_.MergeFrom(from.elements_);
}

void ParameterRequestChoiceElementsReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.ParameterRequestChoiceElementsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterRequestChoiceElementsReply::CopyFrom(const ParameterRequestChoiceElementsReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.ParameterRequestChoiceElementsReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterRequestChoiceElementsReply::IsInitialized() const {
  return true;
}

void ParameterRequestChoiceElementsReply::InternalSwap(ParameterRequestChoiceElementsReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  elements_.InternalSwap(&other->elements_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParameterRequestChoiceElementsReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ParameterSpaceRequestCurrentPath::InitAsDefaultInstance() {
}
class ParameterSpaceRequestCurrentPath::_Internal {
 public:
};

ParameterSpaceRequestCurrentPath::ParameterSpaceRequestCurrentPath(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.ParameterSpaceRequestCurrentPath)
}
ParameterSpaceRequestCurrentPath::ParameterSpaceRequestCurrentPath(const ParameterSpaceRequestCurrentPath& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tinc.ParameterSpaceRequestCurrentPath)
}

void ParameterSpaceRequestCurrentPath::SharedCtor() {
}

ParameterSpaceRequestCurrentPath::~ParameterSpaceRequestCurrentPath() {
  // @@protoc_insertion_point(destructor:tinc.ParameterSpaceRequestCurrentPath)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ParameterSpaceRequestCurrentPath::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ParameterSpaceRequestCurrentPath::ArenaDtor(void* object) {
  ParameterSpaceRequestCurrentPath* _this = reinterpret_cast< ParameterSpaceRequestCurrentPath* >(object);
  (void)_this;
}
void ParameterSpaceRequestCurrentPath::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParameterSpaceRequestCurrentPath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParameterSpaceRequestCurrentPath& ParameterSpaceRequestCurrentPath::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParameterSpaceRequestCurrentPath_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void ParameterSpaceRequestCurrentPath::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.ParameterSpaceRequestCurrentPath)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParameterSpaceRequestCurrentPath::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParameterSpaceRequestCurrentPath::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.ParameterSpaceRequestCurrentPath)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.ParameterSpaceRequestCurrentPath)
  return target;
}

size_t ParameterSpaceRequestCurrentPath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.ParameterSpaceRequestCurrentPath)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParameterSpaceRequestCurrentPath::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.ParameterSpaceRequestCurrentPath)
  GOOGLE_DCHECK_NE(&from, this);
  const ParameterSpaceRequestCurrentPath* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParameterSpaceRequestCurrentPath>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.ParameterSpaceRequestCurrentPath)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.ParameterSpaceRequestCurrentPath)
    MergeFrom(*source);
  }
}

void ParameterSpaceRequestCurrentPath::MergeFrom(const ParameterSpaceRequestCurrentPath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.ParameterSpaceRequestCurrentPath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ParameterSpaceRequestCurrentPath::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.ParameterSpaceRequestCurrentPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterSpaceRequestCurrentPath::CopyFrom(const ParameterSpaceRequestCurrentPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.ParameterSpaceRequestCurrentPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterSpaceRequestCurrentPath::IsInitialized() const {
  return true;
}

void ParameterSpaceRequestCurrentPath::InternalSwap(ParameterSpaceRequestCurrentPath* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParameterSpaceRequestCurrentPath::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ParameterSpaceRequestCurrentPathReply::InitAsDefaultInstance() {
}
class ParameterSpaceRequestCurrentPathReply::_Internal {
 public:
};

ParameterSpaceRequestCurrentPathReply::ParameterSpaceRequestCurrentPathReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.ParameterSpaceRequestCurrentPathReply)
}
ParameterSpaceRequestCurrentPathReply::ParameterSpaceRequestCurrentPathReply(const ParameterSpaceRequestCurrentPathReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:tinc.ParameterSpaceRequestCurrentPathReply)
}

void ParameterSpaceRequestCurrentPathReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParameterSpaceRequestCurrentPathReply_tinc_5fprotocol_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ParameterSpaceRequestCurrentPathReply::~ParameterSpaceRequestCurrentPathReply() {
  // @@protoc_insertion_point(destructor:tinc.ParameterSpaceRequestCurrentPathReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ParameterSpaceRequestCurrentPathReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ParameterSpaceRequestCurrentPathReply::ArenaDtor(void* object) {
  ParameterSpaceRequestCurrentPathReply* _this = reinterpret_cast< ParameterSpaceRequestCurrentPathReply* >(object);
  (void)_this;
}
void ParameterSpaceRequestCurrentPathReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParameterSpaceRequestCurrentPathReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParameterSpaceRequestCurrentPathReply& ParameterSpaceRequestCurrentPathReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParameterSpaceRequestCurrentPathReply_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void ParameterSpaceRequestCurrentPathReply::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.ParameterSpaceRequestCurrentPathReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParameterSpaceRequestCurrentPathReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.ParameterSpaceRequestCurrentPathReply.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParameterSpaceRequestCurrentPathReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.ParameterSpaceRequestCurrentPathReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.ParameterSpaceRequestCurrentPathReply.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.ParameterSpaceRequestCurrentPathReply)
  return target;
}

size_t ParameterSpaceRequestCurrentPathReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.ParameterSpaceRequestCurrentPathReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParameterSpaceRequestCurrentPathReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.ParameterSpaceRequestCurrentPathReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ParameterSpaceRequestCurrentPathReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParameterSpaceRequestCurrentPathReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.ParameterSpaceRequestCurrentPathReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.ParameterSpaceRequestCurrentPathReply)
    MergeFrom(*source);
  }
}

void ParameterSpaceRequestCurrentPathReply::MergeFrom(const ParameterSpaceRequestCurrentPathReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.ParameterSpaceRequestCurrentPathReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void ParameterSpaceRequestCurrentPathReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.ParameterSpaceRequestCurrentPathReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterSpaceRequestCurrentPathReply::CopyFrom(const ParameterSpaceRequestCurrentPathReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.ParameterSpaceRequestCurrentPathReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterSpaceRequestCurrentPathReply::IsInitialized() const {
  return true;
}

void ParameterSpaceRequestCurrentPathReply::InternalSwap(ParameterSpaceRequestCurrentPathReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ParameterSpaceRequestCurrentPathReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ParameterSpaceRequestRootPath::InitAsDefaultInstance() {
}
class ParameterSpaceRequestRootPath::_Internal {
 public:
};

ParameterSpaceRequestRootPath::ParameterSpaceRequestRootPath(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.ParameterSpaceRequestRootPath)
}
ParameterSpaceRequestRootPath::ParameterSpaceRequestRootPath(const ParameterSpaceRequestRootPath& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tinc.ParameterSpaceRequestRootPath)
}

void ParameterSpaceRequestRootPath::SharedCtor() {
}

ParameterSpaceRequestRootPath::~ParameterSpaceRequestRootPath() {
  // @@protoc_insertion_point(destructor:tinc.ParameterSpaceRequestRootPath)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ParameterSpaceRequestRootPath::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ParameterSpaceRequestRootPath::ArenaDtor(void* object) {
  ParameterSpaceRequestRootPath* _this = reinterpret_cast< ParameterSpaceRequestRootPath* >(object);
  (void)_this;
}
void ParameterSpaceRequestRootPath::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParameterSpaceRequestRootPath::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParameterSpaceRequestRootPath& ParameterSpaceRequestRootPath::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParameterSpaceRequestRootPath_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void ParameterSpaceRequestRootPath::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.ParameterSpaceRequestRootPath)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParameterSpaceRequestRootPath::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParameterSpaceRequestRootPath::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.ParameterSpaceRequestRootPath)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.ParameterSpaceRequestRootPath)
  return target;
}

size_t ParameterSpaceRequestRootPath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.ParameterSpaceRequestRootPath)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParameterSpaceRequestRootPath::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.ParameterSpaceRequestRootPath)
  GOOGLE_DCHECK_NE(&from, this);
  const ParameterSpaceRequestRootPath* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParameterSpaceRequestRootPath>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.ParameterSpaceRequestRootPath)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.ParameterSpaceRequestRootPath)
    MergeFrom(*source);
  }
}

void ParameterSpaceRequestRootPath::MergeFrom(const ParameterSpaceRequestRootPath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.ParameterSpaceRequestRootPath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ParameterSpaceRequestRootPath::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.ParameterSpaceRequestRootPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterSpaceRequestRootPath::CopyFrom(const ParameterSpaceRequestRootPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.ParameterSpaceRequestRootPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterSpaceRequestRootPath::IsInitialized() const {
  return true;
}

void ParameterSpaceRequestRootPath::InternalSwap(ParameterSpaceRequestRootPath* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ParameterSpaceRequestRootPath::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ParameterSpaceRequestRootPathReply::InitAsDefaultInstance() {
}
class ParameterSpaceRequestRootPathReply::_Internal {
 public:
};

ParameterSpaceRequestRootPathReply::ParameterSpaceRequestRootPathReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.ParameterSpaceRequestRootPathReply)
}
ParameterSpaceRequestRootPathReply::ParameterSpaceRequestRootPathReply(const ParameterSpaceRequestRootPathReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_path(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:tinc.ParameterSpaceRequestRootPathReply)
}

void ParameterSpaceRequestRootPathReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ParameterSpaceRequestRootPathReply_tinc_5fprotocol_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ParameterSpaceRequestRootPathReply::~ParameterSpaceRequestRootPathReply() {
  // @@protoc_insertion_point(destructor:tinc.ParameterSpaceRequestRootPathReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ParameterSpaceRequestRootPathReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ParameterSpaceRequestRootPathReply::ArenaDtor(void* object) {
  ParameterSpaceRequestRootPathReply* _this = reinterpret_cast< ParameterSpaceRequestRootPathReply* >(object);
  (void)_this;
}
void ParameterSpaceRequestRootPathReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ParameterSpaceRequestRootPathReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ParameterSpaceRequestRootPathReply& ParameterSpaceRequestRootPathReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ParameterSpaceRequestRootPathReply_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void ParameterSpaceRequestRootPathReply::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.ParameterSpaceRequestRootPathReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ParameterSpaceRequestRootPathReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.ParameterSpaceRequestRootPathReply.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ParameterSpaceRequestRootPathReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.ParameterSpaceRequestRootPathReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.ParameterSpaceRequestRootPathReply.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.ParameterSpaceRequestRootPathReply)
  return target;
}

size_t ParameterSpaceRequestRootPathReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.ParameterSpaceRequestRootPathReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ParameterSpaceRequestRootPathReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.ParameterSpaceRequestRootPathReply)
  GOOGLE_DCHECK_NE(&from, this);
  const ParameterSpaceRequestRootPathReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ParameterSpaceRequestRootPathReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.ParameterSpaceRequestRootPathReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.ParameterSpaceRequestRootPathReply)
    MergeFrom(*source);
  }
}

void ParameterSpaceRequestRootPathReply::MergeFrom(const ParameterSpaceRequestRootPathReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.ParameterSpaceRequestRootPathReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void ParameterSpaceRequestRootPathReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.ParameterSpaceRequestRootPathReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ParameterSpaceRequestRootPathReply::CopyFrom(const ParameterSpaceRequestRootPathReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.ParameterSpaceRequestRootPathReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterSpaceRequestRootPathReply::IsInitialized() const {
  return true;
}

void ParameterSpaceRequestRootPathReply::InternalSwap(ParameterSpaceRequestRootPathReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ParameterSpaceRequestRootPathReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DataPoolCommandSlice::InitAsDefaultInstance() {
}
class DataPoolCommandSlice::_Internal {
 public:
};

DataPoolCommandSlice::DataPoolCommandSlice(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  dimension_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.DataPoolCommandSlice)
}
DataPoolCommandSlice::DataPoolCommandSlice(const DataPoolCommandSlice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      dimension_(from.dimension_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_field().empty()) {
    field_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_field(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:tinc.DataPoolCommandSlice)
}

void DataPoolCommandSlice::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataPoolCommandSlice_tinc_5fprotocol_2eproto.base);
  field_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DataPoolCommandSlice::~DataPoolCommandSlice() {
  // @@protoc_insertion_point(destructor:tinc.DataPoolCommandSlice)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DataPoolCommandSlice::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  field_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DataPoolCommandSlice::ArenaDtor(void* object) {
  DataPoolCommandSlice* _this = reinterpret_cast< DataPoolCommandSlice* >(object);
  (void)_this;
}
void DataPoolCommandSlice::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataPoolCommandSlice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataPoolCommandSlice& DataPoolCommandSlice::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataPoolCommandSlice_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void DataPoolCommandSlice::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.DataPoolCommandSlice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dimension_.Clear();
  field_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataPoolCommandSlice::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string field = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_field();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.DataPoolCommandSlice.field"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string dimension = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_dimension();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.DataPoolCommandSlice.dimension"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DataPoolCommandSlice::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.DataPoolCommandSlice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string field = 1;
  if (this->field().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_field().data(), static_cast<int>(this->_internal_field().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.DataPoolCommandSlice.field");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_field(), target);
  }

  // repeated string dimension = 2;
  for (int i = 0, n = this->_internal_dimension_size(); i < n; i++) {
    const auto& s = this->_internal_dimension(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.DataPoolCommandSlice.dimension");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.DataPoolCommandSlice)
  return target;
}

size_t DataPoolCommandSlice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.DataPoolCommandSlice)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string dimension = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(dimension_.size());
  for (int i = 0, n = dimension_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      dimension_.Get(i));
  }

  // string field = 1;
  if (this->field().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_field());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataPoolCommandSlice::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.DataPoolCommandSlice)
  GOOGLE_DCHECK_NE(&from, this);
  const DataPoolCommandSlice* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DataPoolCommandSlice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.DataPoolCommandSlice)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.DataPoolCommandSlice)
    MergeFrom(*source);
  }
}

void DataPoolCommandSlice::MergeFrom(const DataPoolCommandSlice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.DataPoolCommandSlice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dimension_.MergeFrom(from.dimension_);
  if (from.field().size() > 0) {
    _internal_set_field(from._internal_field());
  }
}

void DataPoolCommandSlice::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.DataPoolCommandSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataPoolCommandSlice::CopyFrom(const DataPoolCommandSlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.DataPoolCommandSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataPoolCommandSlice::IsInitialized() const {
  return true;
}

void DataPoolCommandSlice::InternalSwap(DataPoolCommandSlice* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  dimension_.InternalSwap(&other->dimension_);
  field_.Swap(&other->field_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DataPoolCommandSlice::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DataPoolCommandSliceReply::InitAsDefaultInstance() {
}
class DataPoolCommandSliceReply::_Internal {
 public:
};

DataPoolCommandSliceReply::DataPoolCommandSliceReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.DataPoolCommandSliceReply)
}
DataPoolCommandSliceReply::DataPoolCommandSliceReply(const DataPoolCommandSliceReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filename().empty()) {
    filename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_filename(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:tinc.DataPoolCommandSliceReply)
}

void DataPoolCommandSliceReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataPoolCommandSliceReply_tinc_5fprotocol_2eproto.base);
  filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DataPoolCommandSliceReply::~DataPoolCommandSliceReply() {
  // @@protoc_insertion_point(destructor:tinc.DataPoolCommandSliceReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DataPoolCommandSliceReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  filename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DataPoolCommandSliceReply::ArenaDtor(void* object) {
  DataPoolCommandSliceReply* _this = reinterpret_cast< DataPoolCommandSliceReply* >(object);
  (void)_this;
}
void DataPoolCommandSliceReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataPoolCommandSliceReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataPoolCommandSliceReply& DataPoolCommandSliceReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataPoolCommandSliceReply_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void DataPoolCommandSliceReply::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.DataPoolCommandSliceReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataPoolCommandSliceReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string filename = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_filename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.DataPoolCommandSliceReply.filename"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DataPoolCommandSliceReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.DataPoolCommandSliceReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string filename = 1;
  if (this->filename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filename().data(), static_cast<int>(this->_internal_filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.DataPoolCommandSliceReply.filename");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_filename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.DataPoolCommandSliceReply)
  return target;
}

size_t DataPoolCommandSliceReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.DataPoolCommandSliceReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string filename = 1;
  if (this->filename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filename());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataPoolCommandSliceReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.DataPoolCommandSliceReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DataPoolCommandSliceReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DataPoolCommandSliceReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.DataPoolCommandSliceReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.DataPoolCommandSliceReply)
    MergeFrom(*source);
  }
}

void DataPoolCommandSliceReply::MergeFrom(const DataPoolCommandSliceReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.DataPoolCommandSliceReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.filename().size() > 0) {
    _internal_set_filename(from._internal_filename());
  }
}

void DataPoolCommandSliceReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.DataPoolCommandSliceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataPoolCommandSliceReply::CopyFrom(const DataPoolCommandSliceReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.DataPoolCommandSliceReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataPoolCommandSliceReply::IsInitialized() const {
  return true;
}

void DataPoolCommandSliceReply::InternalSwap(DataPoolCommandSliceReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  filename_.Swap(&other->filename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DataPoolCommandSliceReply::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DataPoolCommandCurrentFiles::InitAsDefaultInstance() {
}
class DataPoolCommandCurrentFiles::_Internal {
 public:
};

DataPoolCommandCurrentFiles::DataPoolCommandCurrentFiles(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.DataPoolCommandCurrentFiles)
}
DataPoolCommandCurrentFiles::DataPoolCommandCurrentFiles(const DataPoolCommandCurrentFiles& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tinc.DataPoolCommandCurrentFiles)
}

void DataPoolCommandCurrentFiles::SharedCtor() {
}

DataPoolCommandCurrentFiles::~DataPoolCommandCurrentFiles() {
  // @@protoc_insertion_point(destructor:tinc.DataPoolCommandCurrentFiles)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DataPoolCommandCurrentFiles::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DataPoolCommandCurrentFiles::ArenaDtor(void* object) {
  DataPoolCommandCurrentFiles* _this = reinterpret_cast< DataPoolCommandCurrentFiles* >(object);
  (void)_this;
}
void DataPoolCommandCurrentFiles::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataPoolCommandCurrentFiles::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataPoolCommandCurrentFiles& DataPoolCommandCurrentFiles::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataPoolCommandCurrentFiles_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void DataPoolCommandCurrentFiles::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.DataPoolCommandCurrentFiles)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataPoolCommandCurrentFiles::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DataPoolCommandCurrentFiles::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.DataPoolCommandCurrentFiles)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.DataPoolCommandCurrentFiles)
  return target;
}

size_t DataPoolCommandCurrentFiles::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.DataPoolCommandCurrentFiles)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataPoolCommandCurrentFiles::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.DataPoolCommandCurrentFiles)
  GOOGLE_DCHECK_NE(&from, this);
  const DataPoolCommandCurrentFiles* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DataPoolCommandCurrentFiles>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.DataPoolCommandCurrentFiles)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.DataPoolCommandCurrentFiles)
    MergeFrom(*source);
  }
}

void DataPoolCommandCurrentFiles::MergeFrom(const DataPoolCommandCurrentFiles& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.DataPoolCommandCurrentFiles)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void DataPoolCommandCurrentFiles::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.DataPoolCommandCurrentFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataPoolCommandCurrentFiles::CopyFrom(const DataPoolCommandCurrentFiles& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.DataPoolCommandCurrentFiles)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataPoolCommandCurrentFiles::IsInitialized() const {
  return true;
}

void DataPoolCommandCurrentFiles::InternalSwap(DataPoolCommandCurrentFiles* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataPoolCommandCurrentFiles::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DataPoolCommandCurrentFilesReply::InitAsDefaultInstance() {
}
class DataPoolCommandCurrentFilesReply::_Internal {
 public:
};

DataPoolCommandCurrentFilesReply::DataPoolCommandCurrentFilesReply(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  filenames_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:tinc.DataPoolCommandCurrentFilesReply)
}
DataPoolCommandCurrentFilesReply::DataPoolCommandCurrentFilesReply(const DataPoolCommandCurrentFilesReply& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      filenames_(from.filenames_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:tinc.DataPoolCommandCurrentFilesReply)
}

void DataPoolCommandCurrentFilesReply::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DataPoolCommandCurrentFilesReply_tinc_5fprotocol_2eproto.base);
}

DataPoolCommandCurrentFilesReply::~DataPoolCommandCurrentFilesReply() {
  // @@protoc_insertion_point(destructor:tinc.DataPoolCommandCurrentFilesReply)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DataPoolCommandCurrentFilesReply::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void DataPoolCommandCurrentFilesReply::ArenaDtor(void* object) {
  DataPoolCommandCurrentFilesReply* _this = reinterpret_cast< DataPoolCommandCurrentFilesReply* >(object);
  (void)_this;
}
void DataPoolCommandCurrentFilesReply::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DataPoolCommandCurrentFilesReply::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DataPoolCommandCurrentFilesReply& DataPoolCommandCurrentFilesReply::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DataPoolCommandCurrentFilesReply_tinc_5fprotocol_2eproto.base);
  return *internal_default_instance();
}


void DataPoolCommandCurrentFilesReply::Clear() {
// @@protoc_insertion_point(message_clear_start:tinc.DataPoolCommandCurrentFilesReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  filenames_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DataPoolCommandCurrentFilesReply::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string filenames = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_filenames();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "tinc.DataPoolCommandCurrentFilesReply.filenames"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DataPoolCommandCurrentFilesReply::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:tinc.DataPoolCommandCurrentFilesReply)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string filenames = 1;
  for (int i = 0, n = this->_internal_filenames_size(); i < n; i++) {
    const auto& s = this->_internal_filenames(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "tinc.DataPoolCommandCurrentFilesReply.filenames");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:tinc.DataPoolCommandCurrentFilesReply)
  return target;
}

size_t DataPoolCommandCurrentFilesReply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:tinc.DataPoolCommandCurrentFilesReply)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string filenames = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(filenames_.size());
  for (int i = 0, n = filenames_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      filenames_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DataPoolCommandCurrentFilesReply::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:tinc.DataPoolCommandCurrentFilesReply)
  GOOGLE_DCHECK_NE(&from, this);
  const DataPoolCommandCurrentFilesReply* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DataPoolCommandCurrentFilesReply>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:tinc.DataPoolCommandCurrentFilesReply)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:tinc.DataPoolCommandCurrentFilesReply)
    MergeFrom(*source);
  }
}

void DataPoolCommandCurrentFilesReply::MergeFrom(const DataPoolCommandCurrentFilesReply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:tinc.DataPoolCommandCurrentFilesReply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  filenames_.MergeFrom(from.filenames_);
}

void DataPoolCommandCurrentFilesReply::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:tinc.DataPoolCommandCurrentFilesReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DataPoolCommandCurrentFilesReply::CopyFrom(const DataPoolCommandCurrentFilesReply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:tinc.DataPoolCommandCurrentFilesReply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DataPoolCommandCurrentFilesReply::IsInitialized() const {
  return true;
}

void DataPoolCommandCurrentFilesReply::InternalSwap(DataPoolCommandCurrentFilesReply* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  filenames_.InternalSwap(&other->filenames_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DataPoolCommandCurrentFilesReply::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tinc
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::tinc::TincMessage* Arena::CreateMaybeMessage< ::tinc::TincMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::TincMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::ObjectId* Arena::CreateMaybeMessage< ::tinc::ObjectId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::ObjectId >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::ParameterValue* Arena::CreateMaybeMessage< ::tinc::ParameterValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::ParameterValue >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::RegisterProcessor* Arena::CreateMaybeMessage< ::tinc::RegisterProcessor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::RegisterProcessor >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::RegisterDataPool* Arena::CreateMaybeMessage< ::tinc::RegisterDataPool >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::RegisterDataPool >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::RegisterDiskBuffer* Arena::CreateMaybeMessage< ::tinc::RegisterDiskBuffer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::RegisterDiskBuffer >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::RegisterParameterSpace* Arena::CreateMaybeMessage< ::tinc::RegisterParameterSpace >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::RegisterParameterSpace >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::RegisterParameter* Arena::CreateMaybeMessage< ::tinc::RegisterParameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::RegisterParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::ParameterSpaceValues* Arena::CreateMaybeMessage< ::tinc::ParameterSpaceValues >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::ParameterSpaceValues >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::ConfigureParameter* Arena::CreateMaybeMessage< ::tinc::ConfigureParameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::ConfigureParameter >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::ConfigureParameterSpace* Arena::CreateMaybeMessage< ::tinc::ConfigureParameterSpace >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::ConfigureParameterSpace >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::ConfigureProcessor* Arena::CreateMaybeMessage< ::tinc::ConfigureProcessor >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::ConfigureProcessor >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::ConfigureDiskBuffer* Arena::CreateMaybeMessage< ::tinc::ConfigureDiskBuffer >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::ConfigureDiskBuffer >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::ConfigureDataPool* Arena::CreateMaybeMessage< ::tinc::ConfigureDataPool >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::ConfigureDataPool >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::Command* Arena::CreateMaybeMessage< ::tinc::Command >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::Command >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::CommandErrorPayload* Arena::CreateMaybeMessage< ::tinc::CommandErrorPayload >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::CommandErrorPayload >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::ParameterRequestChoiceElements* Arena::CreateMaybeMessage< ::tinc::ParameterRequestChoiceElements >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::ParameterRequestChoiceElements >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::ParameterRequestChoiceElementsReply* Arena::CreateMaybeMessage< ::tinc::ParameterRequestChoiceElementsReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::ParameterRequestChoiceElementsReply >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::ParameterSpaceRequestCurrentPath* Arena::CreateMaybeMessage< ::tinc::ParameterSpaceRequestCurrentPath >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::ParameterSpaceRequestCurrentPath >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::ParameterSpaceRequestCurrentPathReply* Arena::CreateMaybeMessage< ::tinc::ParameterSpaceRequestCurrentPathReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::ParameterSpaceRequestCurrentPathReply >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::ParameterSpaceRequestRootPath* Arena::CreateMaybeMessage< ::tinc::ParameterSpaceRequestRootPath >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::ParameterSpaceRequestRootPath >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::ParameterSpaceRequestRootPathReply* Arena::CreateMaybeMessage< ::tinc::ParameterSpaceRequestRootPathReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::ParameterSpaceRequestRootPathReply >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::DataPoolCommandSlice* Arena::CreateMaybeMessage< ::tinc::DataPoolCommandSlice >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::DataPoolCommandSlice >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::DataPoolCommandSliceReply* Arena::CreateMaybeMessage< ::tinc::DataPoolCommandSliceReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::DataPoolCommandSliceReply >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::DataPoolCommandCurrentFiles* Arena::CreateMaybeMessage< ::tinc::DataPoolCommandCurrentFiles >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::DataPoolCommandCurrentFiles >(arena);
}
template<> PROTOBUF_NOINLINE ::tinc::DataPoolCommandCurrentFilesReply* Arena::CreateMaybeMessage< ::tinc::DataPoolCommandCurrentFilesReply >(Arena* arena) {
  return Arena::CreateMessageInternal< ::tinc::DataPoolCommandCurrentFilesReply >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
